### YamlMime:ManagedReference
items:
- uid: ImageSharp.ImageFrame`2
  commentId: T:ImageSharp.ImageFrame`2
  id: ImageFrame`2
  parent: ImageSharp
  children:
  - ImageSharp.ImageFrame`2.#ctor
  - ImageSharp.ImageFrame`2.#ctor(ImageSharp.ImageFrame{`0,`1})
  - ImageSharp.ImageFrame`2.ToString
  langs:
  - csharp
  - vb
  name: ImageFrame<TColor, TPacked>
  nameWithType: ImageFrame<TColor, TPacked>
  fullName: ImageSharp.ImageFrame<TColor, TPacked>
  type: Class
  source:
    id: ImageFrame
    path: ''
    startLine: 18663
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp
  summary: "\nRepresents a single frame in a animation.\n"
  example: []
  syntax:
    content: 'public class ImageFrame<TColor, TPacked> : ImageBase<TColor, TPacked>, IImageBase<TColor, TPacked>, IImageBase where TColor : struct, IPackedPixel<TPacked> where TPacked : struct'
    content.vb: >-
      Public Class ImageFrame(Of TColor As {Structure, IPackedPixel(Of TPacked)}, TPacked As Structure)
          Inherits ImageBase(Of TColor, TPacked)
          Implements IImageBase(Of TColor, TPacked), IImageBase
    typeParameters:
    - id: TColor
      description: The pixel format.
    - id: TPacked
      description: The packed format. <example>uint, long, float.</example>
  inheritance:
  - System.Object
  - ImageSharp.ImageBase{{TColor},{TPacked}}
  implements:
  - ImageSharp.IImageBase{{TColor},{TPacked}}
  - ImageSharp.IImageBase
  inheritedMembers:
  - ImageSharp.ImageBase{{TColor},{TPacked}}.MaxWidth
  - ImageSharp.ImageBase{{TColor},{TPacked}}.MaxHeight
  - ImageSharp.ImageBase{{TColor},{TPacked}}.Pixels
  - ImageSharp.ImageBase{{TColor},{TPacked}}.Width
  - ImageSharp.ImageBase{{TColor},{TPacked}}.Height
  - ImageSharp.ImageBase{{TColor},{TPacked}}.PixelRatio
  - ImageSharp.ImageBase{{TColor},{TPacked}}.Bounds
  - ImageSharp.ImageBase{{TColor},{TPacked}}.Quality
  - ImageSharp.ImageBase{{TColor},{TPacked}}.FrameDelay
  - ImageSharp.ImageBase{{TColor},{TPacked}}.InitPixels(System.Int32,System.Int32)
  - ImageSharp.ImageBase{{TColor},{TPacked}}.SetPixels(System.Int32,System.Int32,{TColor}[])
  - ImageSharp.ImageBase{{TColor},{TPacked}}.ClonePixels(System.Int32,System.Int32,{TColor}[])
  - ImageSharp.ImageBase{{TColor},{TPacked}}.Lock
  - ImageSharp.ImageBase{{TColor},{TPacked}}.CopyProperties(ImageSharp.ImageBase{{TColor},{TPacked}})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ImageFrame(Of TColor, TPacked)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: ImageSharp.ImageFrame(Of TColor, TPacked)
  name.vb: ImageFrame(Of TColor, TPacked)
- uid: ImageSharp.ImageFrame`2.#ctor
  commentId: M:ImageSharp.ImageFrame`2.#ctor
  id: '#ctor'
  parent: ImageSharp.ImageFrame`2
  langs:
  - csharp
  - vb
  name: ImageFrame()
  nameWithType: ImageFrame<TColor, TPacked>.ImageFrame()
  fullName: ImageSharp.ImageFrame<TColor, TPacked>.ImageFrame()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 18670
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp
  summary: "\nInitializes a new instance of the <xref href=\"ImageSharp.ImageFrame%602\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ImageFrame()
    content.vb: Public Sub New
  nameWithType.vb: ImageFrame(Of TColor, TPacked).ImageFrame()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: ImageSharp.ImageFrame(Of TColor, TPacked).ImageFrame()
- uid: ImageSharp.ImageFrame`2.#ctor(ImageSharp.ImageFrame{`0,`1})
  commentId: M:ImageSharp.ImageFrame`2.#ctor(ImageSharp.ImageFrame{`0,`1})
  id: '#ctor(ImageSharp.ImageFrame{`0,`1})'
  parent: ImageSharp.ImageFrame`2
  langs:
  - csharp
  - vb
  name: ImageFrame(ImageFrame<TColor, TPacked>)
  nameWithType: ImageFrame<TColor, TPacked>.ImageFrame(ImageFrame<TColor, TPacked>)
  fullName: ImageSharp.ImageFrame<TColor, TPacked>.ImageFrame(ImageSharp.ImageFrame<TColor, TPacked>)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 18680
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp
  summary: "\nInitializes a new instance of the <xref href=\"ImageSharp.ImageFrame%602\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ImageFrame(ImageFrame<TColor, TPacked> frame)
    content.vb: Public Sub New(frame As ImageFrame(Of TColor, TPacked))
    parameters:
    - id: frame
      type: ImageSharp.ImageFrame`2
      description: "\nThe frame to create the frame from.\n"
  nameWithType.vb: ImageFrame(Of TColor, TPacked).ImageFrame(ImageFrame(Of TColor, TPacked))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: ImageSharp.ImageFrame(Of TColor, TPacked).ImageFrame(ImageSharp.ImageFrame(Of TColor, TPacked))
  name.vb: ImageFrame(ImageFrame(Of TColor, TPacked))
- uid: ImageSharp.ImageFrame`2.ToString
  commentId: M:ImageSharp.ImageFrame`2.ToString
  id: ToString
  parent: ImageSharp.ImageFrame`2
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ImageFrame<TColor, TPacked>.ToString()
  fullName: ImageSharp.ImageFrame<TColor, TPacked>.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 18686
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Object.ToString
  nameWithType.vb: ImageFrame(Of TColor, TPacked).ToString()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: ImageSharp.ImageFrame(Of TColor, TPacked).ToString()
references:
- uid: ImageSharp
  commentId: N:ImageSharp
  isExternal: false
  name: ImageSharp
  nameWithType: ImageSharp
  fullName: ImageSharp
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: ImageSharp.ImageBase{{TColor},{TPacked}}
  commentId: T:ImageSharp.ImageBase{``0,``1}
  parent: ImageSharp
  definition: ImageSharp.ImageBase`2
  name: ImageBase<TColor, TPacked>
  nameWithType: ImageBase<TColor, TPacked>
  fullName: ImageSharp.ImageBase<TColor, TPacked>
  nameWithType.vb: ImageBase(Of TColor, TPacked)
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked)
  name.vb: ImageBase(Of TColor, TPacked)
  spec.csharp:
  - uid: ImageSharp.ImageBase`2
    name: ImageBase
    nameWithType: ImageBase
    fullName: ImageSharp.ImageBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ImageSharp.ImageBase`2
    name: ImageBase
    nameWithType: ImageBase
    fullName: ImageSharp.ImageBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.IImageBase{{TColor},{TPacked}}
  commentId: T:ImageSharp.IImageBase{`0,`1}
  parent: ImageSharp
  definition: ImageSharp.IImageBase`2
  name: IImageBase<TColor, TPacked>
  nameWithType: IImageBase<TColor, TPacked>
  fullName: ImageSharp.IImageBase<TColor, TPacked>
  nameWithType.vb: IImageBase(Of TColor, TPacked)
  fullname.vb: ImageSharp.IImageBase(Of TColor, TPacked)
  name.vb: IImageBase(Of TColor, TPacked)
  spec.csharp:
  - uid: ImageSharp.IImageBase`2
    name: IImageBase
    nameWithType: IImageBase
    fullName: ImageSharp.IImageBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ImageSharp.IImageBase`2
    name: IImageBase
    nameWithType: IImageBase
    fullName: ImageSharp.IImageBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.IImageBase
  commentId: T:ImageSharp.IImageBase
  parent: ImageSharp
  isExternal: false
  name: IImageBase
  nameWithType: IImageBase
  fullName: ImageSharp.IImageBase
- uid: ImageSharp.ImageBase{{TColor},{TPacked}}.MaxWidth
  commentId: P:ImageSharp.ImageBase{`0,`1}.MaxWidth
  parent: ImageSharp.ImageBase{{TColor},{TPacked}}
  definition: ImageSharp.ImageBase`2.MaxWidth
  name: MaxWidth
  nameWithType: ImageBase<TColor, TPacked>.MaxWidth
  fullName: ImageSharp.ImageBase<TColor, TPacked>.MaxWidth
  nameWithType.vb: ImageBase(Of TColor, TPacked).MaxWidth
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).MaxWidth
- uid: ImageSharp.ImageBase{{TColor},{TPacked}}.MaxHeight
  commentId: P:ImageSharp.ImageBase{`0,`1}.MaxHeight
  parent: ImageSharp.ImageBase{{TColor},{TPacked}}
  definition: ImageSharp.ImageBase`2.MaxHeight
  name: MaxHeight
  nameWithType: ImageBase<TColor, TPacked>.MaxHeight
  fullName: ImageSharp.ImageBase<TColor, TPacked>.MaxHeight
  nameWithType.vb: ImageBase(Of TColor, TPacked).MaxHeight
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).MaxHeight
- uid: ImageSharp.ImageBase{{TColor},{TPacked}}.Pixels
  commentId: P:ImageSharp.ImageBase{`0,`1}.Pixels
  parent: ImageSharp.ImageBase{{TColor},{TPacked}}
  definition: ImageSharp.ImageBase`2.Pixels
  name: Pixels
  nameWithType: ImageBase<TColor, TPacked>.Pixels
  fullName: ImageSharp.ImageBase<TColor, TPacked>.Pixels
  nameWithType.vb: ImageBase(Of TColor, TPacked).Pixels
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).Pixels
- uid: ImageSharp.ImageBase{{TColor},{TPacked}}.Width
  commentId: P:ImageSharp.ImageBase{`0,`1}.Width
  parent: ImageSharp.ImageBase{{TColor},{TPacked}}
  definition: ImageSharp.ImageBase`2.Width
  name: Width
  nameWithType: ImageBase<TColor, TPacked>.Width
  fullName: ImageSharp.ImageBase<TColor, TPacked>.Width
  nameWithType.vb: ImageBase(Of TColor, TPacked).Width
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).Width
- uid: ImageSharp.ImageBase{{TColor},{TPacked}}.Height
  commentId: P:ImageSharp.ImageBase{`0,`1}.Height
  parent: ImageSharp.ImageBase{{TColor},{TPacked}}
  definition: ImageSharp.ImageBase`2.Height
  name: Height
  nameWithType: ImageBase<TColor, TPacked>.Height
  fullName: ImageSharp.ImageBase<TColor, TPacked>.Height
  nameWithType.vb: ImageBase(Of TColor, TPacked).Height
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).Height
- uid: ImageSharp.ImageBase{{TColor},{TPacked}}.PixelRatio
  commentId: P:ImageSharp.ImageBase{`0,`1}.PixelRatio
  parent: ImageSharp.ImageBase{{TColor},{TPacked}}
  definition: ImageSharp.ImageBase`2.PixelRatio
  name: PixelRatio
  nameWithType: ImageBase<TColor, TPacked>.PixelRatio
  fullName: ImageSharp.ImageBase<TColor, TPacked>.PixelRatio
  nameWithType.vb: ImageBase(Of TColor, TPacked).PixelRatio
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).PixelRatio
- uid: ImageSharp.ImageBase{{TColor},{TPacked}}.Bounds
  commentId: P:ImageSharp.ImageBase{`0,`1}.Bounds
  parent: ImageSharp.ImageBase{{TColor},{TPacked}}
  definition: ImageSharp.ImageBase`2.Bounds
  name: Bounds
  nameWithType: ImageBase<TColor, TPacked>.Bounds
  fullName: ImageSharp.ImageBase<TColor, TPacked>.Bounds
  nameWithType.vb: ImageBase(Of TColor, TPacked).Bounds
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).Bounds
- uid: ImageSharp.ImageBase{{TColor},{TPacked}}.Quality
  commentId: P:ImageSharp.ImageBase{`0,`1}.Quality
  parent: ImageSharp.ImageBase{{TColor},{TPacked}}
  definition: ImageSharp.ImageBase`2.Quality
  name: Quality
  nameWithType: ImageBase<TColor, TPacked>.Quality
  fullName: ImageSharp.ImageBase<TColor, TPacked>.Quality
  nameWithType.vb: ImageBase(Of TColor, TPacked).Quality
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).Quality
- uid: ImageSharp.ImageBase{{TColor},{TPacked}}.FrameDelay
  commentId: P:ImageSharp.ImageBase{`0,`1}.FrameDelay
  parent: ImageSharp.ImageBase{{TColor},{TPacked}}
  definition: ImageSharp.ImageBase`2.FrameDelay
  name: FrameDelay
  nameWithType: ImageBase<TColor, TPacked>.FrameDelay
  fullName: ImageSharp.ImageBase<TColor, TPacked>.FrameDelay
  nameWithType.vb: ImageBase(Of TColor, TPacked).FrameDelay
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).FrameDelay
- uid: ImageSharp.ImageBase{{TColor},{TPacked}}.InitPixels(System.Int32,System.Int32)
  commentId: M:ImageSharp.ImageBase{`0,`1}.InitPixels(System.Int32,System.Int32)
  parent: ImageSharp.ImageBase{{TColor},{TPacked}}
  definition: ImageSharp.ImageBase`2.InitPixels(System.Int32,System.Int32)
  name: InitPixels(Int32, Int32)
  nameWithType: ImageBase<TColor, TPacked>.InitPixels(Int32, Int32)
  fullName: ImageSharp.ImageBase<TColor, TPacked>.InitPixels(System.Int32, System.Int32)
  nameWithType.vb: ImageBase(Of TColor, TPacked).InitPixels(Int32, Int32)
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).InitPixels(System.Int32, System.Int32)
  spec.csharp:
  - uid: ImageSharp.ImageBase`2.InitPixels(System.Int32,System.Int32)
    name: InitPixels
    nameWithType: ImageBase<TColor, TPacked>.InitPixels
    fullName: ImageSharp.ImageBase<TColor, TPacked>.InitPixels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.ImageBase`2.InitPixels(System.Int32,System.Int32)
    name: InitPixels
    nameWithType: ImageBase(Of TColor, TPacked).InitPixels
    fullName: ImageSharp.ImageBase(Of TColor, TPacked).InitPixels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.ImageBase{{TColor},{TPacked}}.SetPixels(System.Int32,System.Int32,{TColor}[])
  commentId: M:ImageSharp.ImageBase{`0,`1}.SetPixels(System.Int32,System.Int32,`0[])
  parent: ImageSharp.ImageBase{{TColor},{TPacked}}
  definition: ImageSharp.ImageBase`2.SetPixels(System.Int32,System.Int32,`0[])
  name: SetPixels(Int32, Int32, TColor[])
  nameWithType: ImageBase<TColor, TPacked>.SetPixels(Int32, Int32, TColor[])
  fullName: ImageSharp.ImageBase<TColor, TPacked>.SetPixels(System.Int32, System.Int32, TColor[])
  nameWithType.vb: ImageBase(Of TColor, TPacked).SetPixels(Int32, Int32, TColor())
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).SetPixels(System.Int32, System.Int32, TColor())
  name.vb: SetPixels(Int32, Int32, TColor())
  spec.csharp:
  - uid: ImageSharp.ImageBase`2.SetPixels(System.Int32,System.Int32,`0[])
    name: SetPixels
    nameWithType: ImageBase<TColor, TPacked>.SetPixels
    fullName: ImageSharp.ImageBase<TColor, TPacked>.SetPixels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.ImageBase`2.SetPixels(System.Int32,System.Int32,`0[])
    name: SetPixels
    nameWithType: ImageBase(Of TColor, TPacked).SetPixels
    fullName: ImageSharp.ImageBase(Of TColor, TPacked).SetPixels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.ImageBase{{TColor},{TPacked}}.ClonePixels(System.Int32,System.Int32,{TColor}[])
  commentId: M:ImageSharp.ImageBase{`0,`1}.ClonePixels(System.Int32,System.Int32,`0[])
  parent: ImageSharp.ImageBase{{TColor},{TPacked}}
  definition: ImageSharp.ImageBase`2.ClonePixels(System.Int32,System.Int32,`0[])
  name: ClonePixels(Int32, Int32, TColor[])
  nameWithType: ImageBase<TColor, TPacked>.ClonePixels(Int32, Int32, TColor[])
  fullName: ImageSharp.ImageBase<TColor, TPacked>.ClonePixels(System.Int32, System.Int32, TColor[])
  nameWithType.vb: ImageBase(Of TColor, TPacked).ClonePixels(Int32, Int32, TColor())
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).ClonePixels(System.Int32, System.Int32, TColor())
  name.vb: ClonePixels(Int32, Int32, TColor())
  spec.csharp:
  - uid: ImageSharp.ImageBase`2.ClonePixels(System.Int32,System.Int32,`0[])
    name: ClonePixels
    nameWithType: ImageBase<TColor, TPacked>.ClonePixels
    fullName: ImageSharp.ImageBase<TColor, TPacked>.ClonePixels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.ImageBase`2.ClonePixels(System.Int32,System.Int32,`0[])
    name: ClonePixels
    nameWithType: ImageBase(Of TColor, TPacked).ClonePixels
    fullName: ImageSharp.ImageBase(Of TColor, TPacked).ClonePixels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.ImageBase{{TColor},{TPacked}}.Lock
  commentId: M:ImageSharp.ImageBase{`0,`1}.Lock
  parent: ImageSharp.ImageBase{{TColor},{TPacked}}
  definition: ImageSharp.ImageBase`2.Lock
  name: Lock()
  nameWithType: ImageBase<TColor, TPacked>.Lock()
  fullName: ImageSharp.ImageBase<TColor, TPacked>.Lock()
  nameWithType.vb: ImageBase(Of TColor, TPacked).Lock()
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).Lock()
  spec.csharp:
  - uid: ImageSharp.ImageBase`2.Lock
    name: Lock
    nameWithType: ImageBase<TColor, TPacked>.Lock
    fullName: ImageSharp.ImageBase<TColor, TPacked>.Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.ImageBase`2.Lock
    name: Lock
    nameWithType: ImageBase(Of TColor, TPacked).Lock
    fullName: ImageSharp.ImageBase(Of TColor, TPacked).Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.ImageBase{{TColor},{TPacked}}.CopyProperties(ImageSharp.ImageBase{{TColor},{TPacked}})
  commentId: M:ImageSharp.ImageBase{`0,`1}.CopyProperties(ImageSharp.ImageBase{`0,`1})
  parent: ImageSharp.ImageBase{{TColor},{TPacked}}
  definition: ImageSharp.ImageBase`2.CopyProperties(ImageSharp.ImageBase{`0,`1})
  name: CopyProperties(ImageBase<TColor, TPacked>)
  nameWithType: ImageBase<TColor, TPacked>.CopyProperties(ImageBase<TColor, TPacked>)
  fullName: ImageSharp.ImageBase<TColor, TPacked>.CopyProperties(ImageSharp.ImageBase<TColor, TPacked>)
  nameWithType.vb: ImageBase(Of TColor, TPacked).CopyProperties(ImageBase(Of TColor, TPacked))
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).CopyProperties(ImageSharp.ImageBase(Of TColor, TPacked))
  name.vb: CopyProperties(ImageBase(Of TColor, TPacked))
  spec.csharp:
  - uid: ImageSharp.ImageBase`2.CopyProperties(ImageSharp.ImageBase{`0,`1})
    name: CopyProperties
    nameWithType: ImageBase<TColor, TPacked>.CopyProperties
    fullName: ImageSharp.ImageBase<TColor, TPacked>.CopyProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: ImageSharp.ImageBase`2
    name: ImageBase
    nameWithType: ImageBase
    fullName: ImageSharp.ImageBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.ImageBase`2.CopyProperties(ImageSharp.ImageBase{`0,`1})
    name: CopyProperties
    nameWithType: ImageBase(Of TColor, TPacked).CopyProperties
    fullName: ImageSharp.ImageBase(Of TColor, TPacked).CopyProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: ImageSharp.ImageBase`2
    name: ImageBase
    nameWithType: ImageBase
    fullName: ImageSharp.ImageBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: ImageSharp.ImageBase`2
  commentId: T:ImageSharp.ImageBase`2
  parent: ImageSharp
  isExternal: false
  name: ImageBase<TColor, TPacked>
  nameWithType: ImageBase<TColor, TPacked>
  fullName: ImageSharp.ImageBase<TColor, TPacked>
  nameWithType.vb: ImageBase(Of TColor, TPacked)
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked)
  name.vb: ImageBase(Of TColor, TPacked)
  spec.csharp:
  - uid: ImageSharp.ImageBase`2
    name: ImageBase
    nameWithType: ImageBase
    fullName: ImageSharp.ImageBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ImageSharp.ImageBase`2
    name: ImageBase
    nameWithType: ImageBase
    fullName: ImageSharp.ImageBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.IImageBase`2
  commentId: T:ImageSharp.IImageBase`2
  isExternal: false
  name: IImageBase<TColor, TPacked>
  nameWithType: IImageBase<TColor, TPacked>
  fullName: ImageSharp.IImageBase<TColor, TPacked>
  nameWithType.vb: IImageBase(Of TColor, TPacked)
  fullname.vb: ImageSharp.IImageBase(Of TColor, TPacked)
  name.vb: IImageBase(Of TColor, TPacked)
  spec.csharp:
  - uid: ImageSharp.IImageBase`2
    name: IImageBase
    nameWithType: IImageBase
    fullName: ImageSharp.IImageBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ImageSharp.IImageBase`2
    name: IImageBase
    nameWithType: IImageBase
    fullName: ImageSharp.IImageBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.ImageBase`2.MaxWidth
  commentId: P:ImageSharp.ImageBase`2.MaxWidth
  isExternal: false
  name: MaxWidth
  nameWithType: ImageBase<TColor, TPacked>.MaxWidth
  fullName: ImageSharp.ImageBase<TColor, TPacked>.MaxWidth
  nameWithType.vb: ImageBase(Of TColor, TPacked).MaxWidth
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).MaxWidth
- uid: ImageSharp.ImageBase`2.MaxHeight
  commentId: P:ImageSharp.ImageBase`2.MaxHeight
  isExternal: false
  name: MaxHeight
  nameWithType: ImageBase<TColor, TPacked>.MaxHeight
  fullName: ImageSharp.ImageBase<TColor, TPacked>.MaxHeight
  nameWithType.vb: ImageBase(Of TColor, TPacked).MaxHeight
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).MaxHeight
- uid: ImageSharp.ImageBase`2.Pixels
  commentId: P:ImageSharp.ImageBase`2.Pixels
  isExternal: false
  name: Pixels
  nameWithType: ImageBase<TColor, TPacked>.Pixels
  fullName: ImageSharp.ImageBase<TColor, TPacked>.Pixels
  nameWithType.vb: ImageBase(Of TColor, TPacked).Pixels
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).Pixels
- uid: ImageSharp.ImageBase`2.Width
  commentId: P:ImageSharp.ImageBase`2.Width
  isExternal: false
  name: Width
  nameWithType: ImageBase<TColor, TPacked>.Width
  fullName: ImageSharp.ImageBase<TColor, TPacked>.Width
  nameWithType.vb: ImageBase(Of TColor, TPacked).Width
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).Width
- uid: ImageSharp.ImageBase`2.Height
  commentId: P:ImageSharp.ImageBase`2.Height
  isExternal: false
  name: Height
  nameWithType: ImageBase<TColor, TPacked>.Height
  fullName: ImageSharp.ImageBase<TColor, TPacked>.Height
  nameWithType.vb: ImageBase(Of TColor, TPacked).Height
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).Height
- uid: ImageSharp.ImageBase`2.PixelRatio
  commentId: P:ImageSharp.ImageBase`2.PixelRatio
  isExternal: false
  name: PixelRatio
  nameWithType: ImageBase<TColor, TPacked>.PixelRatio
  fullName: ImageSharp.ImageBase<TColor, TPacked>.PixelRatio
  nameWithType.vb: ImageBase(Of TColor, TPacked).PixelRatio
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).PixelRatio
- uid: ImageSharp.ImageBase`2.Bounds
  commentId: P:ImageSharp.ImageBase`2.Bounds
  isExternal: false
  name: Bounds
  nameWithType: ImageBase<TColor, TPacked>.Bounds
  fullName: ImageSharp.ImageBase<TColor, TPacked>.Bounds
  nameWithType.vb: ImageBase(Of TColor, TPacked).Bounds
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).Bounds
- uid: ImageSharp.ImageBase`2.Quality
  commentId: P:ImageSharp.ImageBase`2.Quality
  isExternal: false
  name: Quality
  nameWithType: ImageBase<TColor, TPacked>.Quality
  fullName: ImageSharp.ImageBase<TColor, TPacked>.Quality
  nameWithType.vb: ImageBase(Of TColor, TPacked).Quality
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).Quality
- uid: ImageSharp.ImageBase`2.FrameDelay
  commentId: P:ImageSharp.ImageBase`2.FrameDelay
  isExternal: false
  name: FrameDelay
  nameWithType: ImageBase<TColor, TPacked>.FrameDelay
  fullName: ImageSharp.ImageBase<TColor, TPacked>.FrameDelay
  nameWithType.vb: ImageBase(Of TColor, TPacked).FrameDelay
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).FrameDelay
- uid: ImageSharp.ImageBase`2.InitPixels(System.Int32,System.Int32)
  commentId: M:ImageSharp.ImageBase`2.InitPixels(System.Int32,System.Int32)
  isExternal: true
  name: InitPixels(Int32, Int32)
  nameWithType: ImageBase<TColor, TPacked>.InitPixels(Int32, Int32)
  fullName: ImageSharp.ImageBase<TColor, TPacked>.InitPixels(System.Int32, System.Int32)
  nameWithType.vb: ImageBase(Of TColor, TPacked).InitPixels(Int32, Int32)
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).InitPixels(System.Int32, System.Int32)
  spec.csharp:
  - uid: ImageSharp.ImageBase`2.InitPixels(System.Int32,System.Int32)
    name: InitPixels
    nameWithType: ImageBase<TColor, TPacked>.InitPixels
    fullName: ImageSharp.ImageBase<TColor, TPacked>.InitPixels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.ImageBase`2.InitPixels(System.Int32,System.Int32)
    name: InitPixels
    nameWithType: ImageBase(Of TColor, TPacked).InitPixels
    fullName: ImageSharp.ImageBase(Of TColor, TPacked).InitPixels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.ImageBase`2.SetPixels(System.Int32,System.Int32,`0[])
  commentId: M:ImageSharp.ImageBase`2.SetPixels(System.Int32,System.Int32,`0[])
  isExternal: true
  name: SetPixels(Int32, Int32, TColor[])
  nameWithType: ImageBase<TColor, TPacked>.SetPixels(Int32, Int32, TColor[])
  fullName: ImageSharp.ImageBase<TColor, TPacked>.SetPixels(System.Int32, System.Int32, TColor[])
  nameWithType.vb: ImageBase(Of TColor, TPacked).SetPixels(Int32, Int32, TColor())
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).SetPixels(System.Int32, System.Int32, TColor())
  name.vb: SetPixels(Int32, Int32, TColor())
  spec.csharp:
  - uid: ImageSharp.ImageBase`2.SetPixels(System.Int32,System.Int32,`0[])
    name: SetPixels
    nameWithType: ImageBase<TColor, TPacked>.SetPixels
    fullName: ImageSharp.ImageBase<TColor, TPacked>.SetPixels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.ImageBase`2.SetPixels(System.Int32,System.Int32,`0[])
    name: SetPixels
    nameWithType: ImageBase(Of TColor, TPacked).SetPixels
    fullName: ImageSharp.ImageBase(Of TColor, TPacked).SetPixels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.ImageBase`2.ClonePixels(System.Int32,System.Int32,`0[])
  commentId: M:ImageSharp.ImageBase`2.ClonePixels(System.Int32,System.Int32,`0[])
  isExternal: true
  name: ClonePixels(Int32, Int32, TColor[])
  nameWithType: ImageBase<TColor, TPacked>.ClonePixels(Int32, Int32, TColor[])
  fullName: ImageSharp.ImageBase<TColor, TPacked>.ClonePixels(System.Int32, System.Int32, TColor[])
  nameWithType.vb: ImageBase(Of TColor, TPacked).ClonePixels(Int32, Int32, TColor())
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).ClonePixels(System.Int32, System.Int32, TColor())
  name.vb: ClonePixels(Int32, Int32, TColor())
  spec.csharp:
  - uid: ImageSharp.ImageBase`2.ClonePixels(System.Int32,System.Int32,`0[])
    name: ClonePixels
    nameWithType: ImageBase<TColor, TPacked>.ClonePixels
    fullName: ImageSharp.ImageBase<TColor, TPacked>.ClonePixels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.ImageBase`2.ClonePixels(System.Int32,System.Int32,`0[])
    name: ClonePixels
    nameWithType: ImageBase(Of TColor, TPacked).ClonePixels
    fullName: ImageSharp.ImageBase(Of TColor, TPacked).ClonePixels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.ImageBase`2.Lock
  commentId: M:ImageSharp.ImageBase`2.Lock
  isExternal: false
  name: Lock()
  nameWithType: ImageBase<TColor, TPacked>.Lock()
  fullName: ImageSharp.ImageBase<TColor, TPacked>.Lock()
  nameWithType.vb: ImageBase(Of TColor, TPacked).Lock()
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).Lock()
  spec.csharp:
  - uid: ImageSharp.ImageBase`2.Lock
    name: Lock
    nameWithType: ImageBase<TColor, TPacked>.Lock
    fullName: ImageSharp.ImageBase<TColor, TPacked>.Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.ImageBase`2.Lock
    name: Lock
    nameWithType: ImageBase(Of TColor, TPacked).Lock
    fullName: ImageSharp.ImageBase(Of TColor, TPacked).Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.ImageBase`2.CopyProperties(ImageSharp.ImageBase{`0,`1})
  commentId: M:ImageSharp.ImageBase`2.CopyProperties(ImageSharp.ImageBase{`0,`1})
  isExternal: false
  name: CopyProperties(ImageBase<TColor, TPacked>)
  nameWithType: ImageBase<TColor, TPacked>.CopyProperties(ImageBase<TColor, TPacked>)
  fullName: ImageSharp.ImageBase<TColor, TPacked>.CopyProperties(ImageSharp.ImageBase<TColor, TPacked>)
  nameWithType.vb: ImageBase(Of TColor, TPacked).CopyProperties(ImageBase(Of TColor, TPacked))
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).CopyProperties(ImageSharp.ImageBase(Of TColor, TPacked))
  name.vb: CopyProperties(ImageBase(Of TColor, TPacked))
  spec.csharp:
  - uid: ImageSharp.ImageBase`2.CopyProperties(ImageSharp.ImageBase{`0,`1})
    name: CopyProperties
    nameWithType: ImageBase<TColor, TPacked>.CopyProperties
    fullName: ImageSharp.ImageBase<TColor, TPacked>.CopyProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: ImageSharp.ImageBase`2
    name: ImageBase
    nameWithType: ImageBase
    fullName: ImageSharp.ImageBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.ImageBase`2.CopyProperties(ImageSharp.ImageBase{`0,`1})
    name: CopyProperties
    nameWithType: ImageBase(Of TColor, TPacked).CopyProperties
    fullName: ImageSharp.ImageBase(Of TColor, TPacked).CopyProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: ImageSharp.ImageBase`2
    name: ImageBase
    nameWithType: ImageBase
    fullName: ImageSharp.ImageBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.ImageFrame`2
  commentId: T:ImageSharp.ImageFrame`2
  parent: ImageSharp
  isExternal: false
  name: ImageFrame<TColor, TPacked>
  nameWithType: ImageFrame<TColor, TPacked>
  fullName: ImageSharp.ImageFrame<TColor, TPacked>
  nameWithType.vb: ImageFrame(Of TColor, TPacked)
  fullname.vb: ImageSharp.ImageFrame(Of TColor, TPacked)
  name.vb: ImageFrame(Of TColor, TPacked)
  spec.csharp:
  - uid: ImageSharp.ImageFrame`2
    name: ImageFrame
    nameWithType: ImageFrame
    fullName: ImageSharp.ImageFrame
  - name: <
    nameWithType: <
    fullName: <
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ImageSharp.ImageFrame`2
    name: ImageFrame
    nameWithType: ImageFrame
    fullName: ImageSharp.ImageFrame
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
