### YamlMime:ManagedReference
items:
- uid: ImageSharp.Processors.IImageFilter`2
  commentId: T:ImageSharp.Processors.IImageFilter`2
  id: IImageFilter`2
  parent: ImageSharp.Processors
  children:
  - ImageSharp.Processors.IImageFilter`2.Apply(ImageSharp.ImageBase{`0,`1},ImageSharp.Rectangle)
  langs:
  - csharp
  - vb
  name: IImageFilter<TColor, TPacked>
  nameWithType: IImageFilter<TColor, TPacked>
  fullName: ImageSharp.Processors.IImageFilter<TColor, TPacked>
  type: Interface
  source:
    id: IImageFilter
    path: ''
    startLine: 6222
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp.Processors
  summary: "\nEncapsulates methods to alter the pixels of an image. The processor operates on the original source pixels.\n"
  example: []
  syntax:
    content: 'public interface IImageFilter<TColor, TPacked> : IImageProcessor where TColor : struct, IPackedPixel<TPacked> where TPacked : struct'
    content.vb: >-
      Public Interface IImageFilter(Of TColor As {Structure, IPackedPixel(Of TPacked)}, TPacked As Structure)
          Inherits IImageProcessor
    typeParameters:
    - id: TColor
      description: The pixel format.
    - id: TPacked
      description: The packed format. <example>uint, long, float.</example>
  inheritedMembers:
  - ImageSharp.Processors.IImageProcessor.ParallelOptions
  - ImageSharp.Processors.IImageProcessor.Compand
  nameWithType.vb: IImageFilter(Of TColor, TPacked)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: ImageSharp.Processors.IImageFilter(Of TColor, TPacked)
  name.vb: IImageFilter(Of TColor, TPacked)
- uid: ImageSharp.Processors.IImageFilter`2.Apply(ImageSharp.ImageBase{`0,`1},ImageSharp.Rectangle)
  commentId: M:ImageSharp.Processors.IImageFilter`2.Apply(ImageSharp.ImageBase{`0,`1},ImageSharp.Rectangle)
  id: Apply(ImageSharp.ImageBase{`0,`1},ImageSharp.Rectangle)
  parent: ImageSharp.Processors.IImageFilter`2
  langs:
  - csharp
  - vb
  name: Apply(ImageBase<TColor, TPacked>, Rectangle)
  nameWithType: IImageFilter<TColor, TPacked>.Apply(ImageBase<TColor, TPacked>, Rectangle)
  fullName: ImageSharp.Processors.IImageFilter<TColor, TPacked>.Apply(ImageSharp.ImageBase<TColor, TPacked>, ImageSharp.Rectangle)
  type: Method
  source:
    id: Apply
    path: ''
    startLine: 6243
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp.Processors
  summary: "\nApplies the process to the specified portion of the specified <xref href=\"ImageSharp.ImageBase%602\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe method keeps the source image unchanged and returns the\nthe result of image processing filter as new image.\n"
  example: []
  syntax:
    content: void Apply(ImageBase<TColor, TPacked> source, Rectangle sourceRectangle)
    content.vb: Sub Apply(source As ImageBase(Of TColor, TPacked), sourceRectangle As Rectangle)
    parameters:
    - id: source
      type: ImageSharp.ImageBase{{TColor},{TPacked}}
      description: The source image. Cannot be null.
    - id: sourceRectangle
      type: ImageSharp.Rectangle
      description: "\nThe <xref href=\"ImageSharp.Rectangle\" data-throw-if-not-resolved=\"false\"></xref> structure that specifies the portion of the image object to draw.\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n<em>source</em> is null.\n"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<em>sourceRectangle</em> doesnt fit the dimension of the image.\n"
  nameWithType.vb: IImageFilter(Of TColor, TPacked).Apply(ImageBase(Of TColor, TPacked), Rectangle)
  fullName.vb: ImageSharp.Processors.IImageFilter(Of TColor, TPacked).Apply(ImageSharp.ImageBase(Of TColor, TPacked), ImageSharp.Rectangle)
  name.vb: Apply(ImageBase(Of TColor, TPacked), Rectangle)
references:
- uid: ImageSharp.Processors
  commentId: N:ImageSharp.Processors
  isExternal: false
  name: ImageSharp.Processors
  nameWithType: ImageSharp.Processors
  fullName: ImageSharp.Processors
- uid: ImageSharp.Processors.IImageProcessor.ParallelOptions
  commentId: P:ImageSharp.Processors.IImageProcessor.ParallelOptions
  parent: ImageSharp.Processors.IImageProcessor
  isExternal: false
  name: ParallelOptions
  nameWithType: IImageProcessor.ParallelOptions
  fullName: ImageSharp.Processors.IImageProcessor.ParallelOptions
- uid: ImageSharp.Processors.IImageProcessor.Compand
  commentId: P:ImageSharp.Processors.IImageProcessor.Compand
  parent: ImageSharp.Processors.IImageProcessor
  isExternal: false
  name: Compand
  nameWithType: IImageProcessor.Compand
  fullName: ImageSharp.Processors.IImageProcessor.Compand
- uid: ImageSharp.Processors.IImageProcessor
  commentId: T:ImageSharp.Processors.IImageProcessor
  parent: ImageSharp.Processors
  isExternal: false
  name: IImageProcessor
  nameWithType: IImageProcessor
  fullName: ImageSharp.Processors.IImageProcessor
- uid: ImageSharp.ImageBase`2
  commentId: T:ImageSharp.ImageBase`2
  parent: ImageSharp
  isExternal: false
  name: ImageBase<TColor, TPacked>
  nameWithType: ImageBase<TColor, TPacked>
  fullName: ImageSharp.ImageBase<TColor, TPacked>
  nameWithType.vb: ImageBase(Of TColor, TPacked)
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked)
  name.vb: ImageBase(Of TColor, TPacked)
  spec.csharp:
  - uid: ImageSharp.ImageBase`2
    name: ImageBase
    nameWithType: ImageBase
    fullName: ImageSharp.ImageBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ImageSharp.ImageBase`2
    name: ImageBase
    nameWithType: ImageBase
    fullName: ImageSharp.ImageBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.Rectangle
  commentId: T:ImageSharp.Rectangle
  parent: ImageSharp
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: ImageSharp.Rectangle
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: ImageSharp.ImageBase{{TColor},{TPacked}}
  commentId: T:ImageSharp.ImageBase{``0,``1}
  parent: ImageSharp
  definition: ImageSharp.ImageBase`2
  name: ImageBase<TColor, TPacked>
  nameWithType: ImageBase<TColor, TPacked>
  fullName: ImageSharp.ImageBase<TColor, TPacked>
  nameWithType.vb: ImageBase(Of TColor, TPacked)
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked)
  name.vb: ImageBase(Of TColor, TPacked)
  spec.csharp:
  - uid: ImageSharp.ImageBase`2
    name: ImageBase
    nameWithType: ImageBase
    fullName: ImageSharp.ImageBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ImageSharp.ImageBase`2
    name: ImageBase
    nameWithType: ImageBase
    fullName: ImageSharp.ImageBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp
  commentId: N:ImageSharp
  isExternal: false
  name: ImageSharp
  nameWithType: ImageSharp
  fullName: ImageSharp
