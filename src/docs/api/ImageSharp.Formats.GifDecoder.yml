### YamlMime:ManagedReference
items:
- uid: ImageSharp.Formats.GifDecoder
  commentId: T:ImageSharp.Formats.GifDecoder
  id: GifDecoder
  parent: ImageSharp.Formats
  children:
  - ImageSharp.Formats.GifDecoder.Decode``2(ImageSharp.Image{``0,``1},System.IO.Stream)
  - ImageSharp.Formats.GifDecoder.HeaderSize
  - ImageSharp.Formats.GifDecoder.IsSupportedFileExtension(System.String)
  - ImageSharp.Formats.GifDecoder.IsSupportedFileFormat(System.Byte[])
  langs:
  - csharp
  - vb
  name: GifDecoder
  nameWithType: GifDecoder
  fullName: ImageSharp.Formats.GifDecoder
  type: Class
  source:
    id: GifDecoder
    path: ''
    startLine: 8634
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp.Formats
  summary: "\nDecoder for generating an image out of a gif encoded stream.\n"
  example: []
  syntax:
    content: 'public class GifDecoder : IImageDecoder'
    content.vb: >-
      Public Class GifDecoder
          Implements IImageDecoder
  inheritance:
  - System.Object
  implements:
  - ImageSharp.Formats.IImageDecoder
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ImageSharp.Formats.GifDecoder.HeaderSize
  commentId: P:ImageSharp.Formats.GifDecoder.HeaderSize
  id: HeaderSize
  parent: ImageSharp.Formats.GifDecoder
  langs:
  - csharp
  - vb
  name: HeaderSize
  nameWithType: GifDecoder.HeaderSize
  fullName: ImageSharp.Formats.GifDecoder.HeaderSize
  type: Property
  source:
    id: HeaderSize
    path: ''
    startLine: 8640
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp.Formats
  summary: "\nGets the size of the header for this image type.\n"
  example: []
  syntax:
    content: public int HeaderSize { get; }
    content.vb: Public ReadOnly Property HeaderSize As Integer
    parameters: []
    return:
      type: System.Int32
      description: The size of the header.
  implements:
  - ImageSharp.Formats.IImageDecoder.HeaderSize
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: ImageSharp.Formats.GifDecoder.IsSupportedFileExtension(System.String)
  commentId: M:ImageSharp.Formats.GifDecoder.IsSupportedFileExtension(System.String)
  id: IsSupportedFileExtension(System.String)
  parent: ImageSharp.Formats.GifDecoder
  langs:
  - csharp
  - vb
  name: IsSupportedFileExtension(String)
  nameWithType: GifDecoder.IsSupportedFileExtension(String)
  fullName: ImageSharp.Formats.GifDecoder.IsSupportedFileExtension(System.String)
  type: Method
  source:
    id: IsSupportedFileExtension
    path: ''
    startLine: 8650
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp.Formats
  summary: "\nReturns a value indicating whether the <xref href=\"ImageSharp.Formats.IImageDecoder\" data-throw-if-not-resolved=\"false\"></xref> supports the specified\nfile header.\n"
  example: []
  syntax:
    content: public bool IsSupportedFileExtension(string extension)
    content.vb: Public Function IsSupportedFileExtension(extension As String) As Boolean
    parameters:
    - id: extension
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> containing the file extension.
    return:
      type: System.Boolean
      description: "\nTrue if the decoder supports the file extension; otherwise, false.\n"
  implements:
  - ImageSharp.Formats.IImageDecoder.IsSupportedFileExtension(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ImageSharp.Formats.GifDecoder.IsSupportedFileFormat(System.Byte[])
  commentId: M:ImageSharp.Formats.GifDecoder.IsSupportedFileFormat(System.Byte[])
  id: IsSupportedFileFormat(System.Byte[])
  parent: ImageSharp.Formats.GifDecoder
  langs:
  - csharp
  - vb
  name: IsSupportedFileFormat(Byte[])
  nameWithType: GifDecoder.IsSupportedFileFormat(Byte[])
  fullName: ImageSharp.Formats.GifDecoder.IsSupportedFileFormat(System.Byte[])
  type: Method
  source:
    id: IsSupportedFileFormat
    path: ''
    startLine: 8666
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp.Formats
  summary: "\nReturns a value indicating whether the <xref href=\"ImageSharp.Formats.IImageDecoder\" data-throw-if-not-resolved=\"false\"></xref> supports the specified\nfile header.\n"
  example: []
  syntax:
    content: public bool IsSupportedFileFormat(byte[] header)
    content.vb: Public Function IsSupportedFileFormat(header As Byte()) As Boolean
    parameters:
    - id: header
      type: System.Byte[]
      description: The <xref href="byte%5b%5d" data-throw-if-not-resolved="false"></xref> containing the file header.
    return:
      type: System.Boolean
      description: "\nTrue if the decoder supports the file header; otherwise, false.\n"
  implements:
  - ImageSharp.Formats.IImageDecoder.IsSupportedFileFormat(System.Byte[])
  nameWithType.vb: GifDecoder.IsSupportedFileFormat(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: ImageSharp.Formats.GifDecoder.IsSupportedFileFormat(System.Byte())
  name.vb: IsSupportedFileFormat(Byte())
- uid: ImageSharp.Formats.GifDecoder.Decode``2(ImageSharp.Image{``0,``1},System.IO.Stream)
  commentId: M:ImageSharp.Formats.GifDecoder.Decode``2(ImageSharp.Image{``0,``1},System.IO.Stream)
  id: Decode``2(ImageSharp.Image{``0,``1},System.IO.Stream)
  parent: ImageSharp.Formats.GifDecoder
  langs:
  - csharp
  - vb
  name: Decode<TColor, TPacked>(Image<TColor, TPacked>, Stream)
  nameWithType: GifDecoder.Decode<TColor, TPacked>(Image<TColor, TPacked>, Stream)
  fullName: ImageSharp.Formats.GifDecoder.Decode<TColor, TPacked>(ImageSharp.Image<TColor, TPacked>, System.IO.Stream)
  type: Method
  source:
    id: Decode
    path: ''
    startLine: 8678
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp.Formats
  example: []
  syntax:
    content: 'public void Decode<TColor, TPacked>(Image<TColor, TPacked> image, Stream stream)where TColor : struct, IPackedPixel<TPacked> where TPacked : struct'
    content.vb: Public Sub Decode(Of TColor As {Structure, IPackedPixel(Of TPacked)}, TPacked As Structure)(image As Image(Of TColor, TPacked), stream As Stream)
    parameters:
    - id: image
      type: ImageSharp.Image{{TColor},{TPacked}}
    - id: stream
      type: System.IO.Stream
    typeParameters:
    - id: TColor
    - id: TPacked
  implements:
  - ImageSharp.Formats.IImageDecoder.Decode``2(ImageSharp.Image{{TColor},{TPacked}},System.IO.Stream)
  nameWithType.vb: GifDecoder.Decode(Of TColor, TPacked)(Image(Of TColor, TPacked), Stream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: ImageSharp.Formats.GifDecoder.Decode(Of TColor, TPacked)(ImageSharp.Image(Of TColor, TPacked), System.IO.Stream)
  name.vb: Decode(Of TColor, TPacked)(Image(Of TColor, TPacked), Stream)
references:
- uid: ImageSharp.Formats
  commentId: N:ImageSharp.Formats
  isExternal: false
  name: ImageSharp.Formats
  nameWithType: ImageSharp.Formats
  fullName: ImageSharp.Formats
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: ImageSharp.Formats.IImageDecoder
  commentId: T:ImageSharp.Formats.IImageDecoder
  parent: ImageSharp.Formats
  isExternal: false
  name: IImageDecoder
  nameWithType: IImageDecoder
  fullName: ImageSharp.Formats.IImageDecoder
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: ImageSharp.Formats.IImageDecoder.HeaderSize
  commentId: P:ImageSharp.Formats.IImageDecoder.HeaderSize
  parent: ImageSharp.Formats.IImageDecoder
  isExternal: false
  name: HeaderSize
  nameWithType: IImageDecoder.HeaderSize
  fullName: ImageSharp.Formats.IImageDecoder.HeaderSize
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ImageSharp.Formats.IImageDecoder.IsSupportedFileExtension(System.String)
  commentId: M:ImageSharp.Formats.IImageDecoder.IsSupportedFileExtension(System.String)
  parent: ImageSharp.Formats.IImageDecoder
  isExternal: true
  name: IsSupportedFileExtension(String)
  nameWithType: IImageDecoder.IsSupportedFileExtension(String)
  fullName: ImageSharp.Formats.IImageDecoder.IsSupportedFileExtension(System.String)
  spec.csharp:
  - uid: ImageSharp.Formats.IImageDecoder.IsSupportedFileExtension(System.String)
    name: IsSupportedFileExtension
    nameWithType: IImageDecoder.IsSupportedFileExtension
    fullName: ImageSharp.Formats.IImageDecoder.IsSupportedFileExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.Formats.IImageDecoder.IsSupportedFileExtension(System.String)
    name: IsSupportedFileExtension
    nameWithType: IImageDecoder.IsSupportedFileExtension
    fullName: ImageSharp.Formats.IImageDecoder.IsSupportedFileExtension
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: byte[]
  commentId: T:byte[]
- uid: ImageSharp.Formats.IImageDecoder.IsSupportedFileFormat(System.Byte[])
  commentId: M:ImageSharp.Formats.IImageDecoder.IsSupportedFileFormat(System.Byte[])
  parent: ImageSharp.Formats.IImageDecoder
  isExternal: true
  name: IsSupportedFileFormat(Byte[])
  nameWithType: IImageDecoder.IsSupportedFileFormat(Byte[])
  fullName: ImageSharp.Formats.IImageDecoder.IsSupportedFileFormat(System.Byte[])
  nameWithType.vb: IImageDecoder.IsSupportedFileFormat(Byte())
  fullname.vb: ImageSharp.Formats.IImageDecoder.IsSupportedFileFormat(System.Byte())
  name.vb: IsSupportedFileFormat(Byte())
  spec.csharp:
  - uid: ImageSharp.Formats.IImageDecoder.IsSupportedFileFormat(System.Byte[])
    name: IsSupportedFileFormat
    nameWithType: IImageDecoder.IsSupportedFileFormat
    fullName: ImageSharp.Formats.IImageDecoder.IsSupportedFileFormat
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.Formats.IImageDecoder.IsSupportedFileFormat(System.Byte[])
    name: IsSupportedFileFormat
    nameWithType: IImageDecoder.IsSupportedFileFormat
    fullName: ImageSharp.Formats.IImageDecoder.IsSupportedFileFormat
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: ImageSharp.Formats.IImageDecoder.Decode``2(ImageSharp.Image{{TColor},{TPacked}},System.IO.Stream)
  commentId: M:ImageSharp.Formats.IImageDecoder.Decode``2(ImageSharp.Image{``0,``1},System.IO.Stream)
  parent: ImageSharp.Formats.IImageDecoder
  definition: ImageSharp.Formats.IImageDecoder.Decode``2(ImageSharp.Image{``0,``1},System.IO.Stream)
  name: Decode<TColor, TPacked>(Image<TColor, TPacked>, Stream)
  nameWithType: IImageDecoder.Decode<TColor, TPacked>(Image<TColor, TPacked>, Stream)
  fullName: ImageSharp.Formats.IImageDecoder.Decode<TColor, TPacked>(ImageSharp.Image<TColor, TPacked>, System.IO.Stream)
  nameWithType.vb: IImageDecoder.Decode(Of TColor, TPacked)(Image(Of TColor, TPacked), Stream)
  fullname.vb: ImageSharp.Formats.IImageDecoder.Decode(Of TColor, TPacked)(ImageSharp.Image(Of TColor, TPacked), System.IO.Stream)
  name.vb: Decode(Of TColor, TPacked)(Image(Of TColor, TPacked), Stream)
  spec.csharp:
  - uid: ImageSharp.Formats.IImageDecoder.Decode``2(ImageSharp.Image{``0,``1},System.IO.Stream)
    name: Decode<TColor, TPacked>
    nameWithType: IImageDecoder.Decode<TColor, TPacked>
    fullName: ImageSharp.Formats.IImageDecoder.Decode<TColor, TPacked>
  - name: (
    nameWithType: (
    fullName: (
  - uid: ImageSharp.Image`2
    name: Image
    nameWithType: Image
    fullName: ImageSharp.Image
  - name: <
    nameWithType: <
    fullName: <
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.Formats.IImageDecoder.Decode``2(ImageSharp.Image{``0,``1},System.IO.Stream)
    name: Decode(Of TColor, TPacked)
    nameWithType: IImageDecoder.Decode(Of TColor, TPacked)
    fullName: ImageSharp.Formats.IImageDecoder.Decode(Of TColor, TPacked)
  - name: (
    nameWithType: (
    fullName: (
  - uid: ImageSharp.Image`2
    name: Image
    nameWithType: Image
    fullName: ImageSharp.Image
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.Image{{TColor},{TPacked}}
  commentId: T:ImageSharp.Image{``0,``1}
  parent: ImageSharp
  definition: ImageSharp.Image`2
  name: Image<TColor, TPacked>
  nameWithType: Image<TColor, TPacked>
  fullName: ImageSharp.Image<TColor, TPacked>
  nameWithType.vb: Image(Of TColor, TPacked)
  fullname.vb: ImageSharp.Image(Of TColor, TPacked)
  name.vb: Image(Of TColor, TPacked)
  spec.csharp:
  - uid: ImageSharp.Image`2
    name: Image
    nameWithType: Image
    fullName: ImageSharp.Image
  - name: <
    nameWithType: <
    fullName: <
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ImageSharp.Image`2
    name: Image
    nameWithType: Image
    fullName: ImageSharp.Image
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: ImageSharp.Formats.IImageDecoder.Decode``2(ImageSharp.Image{``0,``1},System.IO.Stream)
  commentId: M:ImageSharp.Formats.IImageDecoder.Decode``2(ImageSharp.Image{``0,``1},System.IO.Stream)
  isExternal: true
  name: Decode<TColor, TPacked>(Image<TColor, TPacked>, Stream)
  nameWithType: IImageDecoder.Decode<TColor, TPacked>(Image<TColor, TPacked>, Stream)
  fullName: ImageSharp.Formats.IImageDecoder.Decode<TColor, TPacked>(ImageSharp.Image<TColor, TPacked>, System.IO.Stream)
  nameWithType.vb: IImageDecoder.Decode(Of TColor, TPacked)(Image(Of TColor, TPacked), Stream)
  fullname.vb: ImageSharp.Formats.IImageDecoder.Decode(Of TColor, TPacked)(ImageSharp.Image(Of TColor, TPacked), System.IO.Stream)
  name.vb: Decode(Of TColor, TPacked)(Image(Of TColor, TPacked), Stream)
  spec.csharp:
  - uid: ImageSharp.Formats.IImageDecoder.Decode``2(ImageSharp.Image{``0,``1},System.IO.Stream)
    name: Decode<TColor, TPacked>
    nameWithType: IImageDecoder.Decode<TColor, TPacked>
    fullName: ImageSharp.Formats.IImageDecoder.Decode<TColor, TPacked>
  - name: (
    nameWithType: (
    fullName: (
  - uid: ImageSharp.Image`2
    name: Image
    nameWithType: Image
    fullName: ImageSharp.Image
  - name: <
    nameWithType: <
    fullName: <
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.Formats.IImageDecoder.Decode``2(ImageSharp.Image{``0,``1},System.IO.Stream)
    name: Decode(Of TColor, TPacked)
    nameWithType: IImageDecoder.Decode(Of TColor, TPacked)
    fullName: ImageSharp.Formats.IImageDecoder.Decode(Of TColor, TPacked)
  - name: (
    nameWithType: (
    fullName: (
  - uid: ImageSharp.Image`2
    name: Image
    nameWithType: Image
    fullName: ImageSharp.Image
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.Image`2
  commentId: T:ImageSharp.Image`2
  parent: ImageSharp
  isExternal: false
  name: Image<TColor, TPacked>
  nameWithType: Image<TColor, TPacked>
  fullName: ImageSharp.Image<TColor, TPacked>
  nameWithType.vb: Image(Of TColor, TPacked)
  fullname.vb: ImageSharp.Image(Of TColor, TPacked)
  name.vb: Image(Of TColor, TPacked)
  spec.csharp:
  - uid: ImageSharp.Image`2
    name: Image
    nameWithType: Image
    fullName: ImageSharp.Image
  - name: <
    nameWithType: <
    fullName: <
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ImageSharp.Image`2
    name: Image
    nameWithType: Image
    fullName: ImageSharp.Image
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp
  commentId: N:ImageSharp
  isExternal: false
  name: ImageSharp
  nameWithType: ImageSharp
  fullName: ImageSharp
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
