### YamlMime:ManagedReference
items:
- uid: ImageSharp.Image
  commentId: T:ImageSharp.Image
  id: Image
  parent: ImageSharp
  children:
  - ImageSharp.Image.#ctor
  - ImageSharp.Image.#ctor(ImageSharp.Image)
  - ImageSharp.Image.#ctor(System.Int32,System.Int32)
  - ImageSharp.Image.#ctor(System.IO.Stream)
  - ImageSharp.Image.Lock
  langs:
  - csharp
  - vb
  name: Image
  nameWithType: Image
  fullName: ImageSharp.Image
  type: Class
  source:
    id: Image
    path: ''
    startLine: 84
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp
  summary: "\nRepresents an image. Each pixel is a made up four 8-bit components red, green, blue, and alpha\npacked into a single unsigned integer value.\n"
  example: []
  syntax:
    content: 'public class Image : Image<Color, uint>, IImageBase<Color, uint>, IImageBase'
    content.vb: >-
      Public Class Image
          Inherits Image(Of Color, UInteger)
          Implements IImageBase(Of Color, UInteger), IImageBase
  inheritance:
  - System.Object
  - ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}
  - ImageSharp.Image{ImageSharp.Color,System.UInt32}
  implements:
  - ImageSharp.IImageBase{ImageSharp.Color,System.UInt32}
  - ImageSharp.IImageBase
  inheritedMembers:
  - ImageSharp.Image{ImageSharp.Color,System.UInt32}.DefaultHorizontalResolution
  - ImageSharp.Image{ImageSharp.Color,System.UInt32}.DefaultVerticalResolution
  - ImageSharp.Image{ImageSharp.Color,System.UInt32}.Formats
  - ImageSharp.Image{ImageSharp.Color,System.UInt32}.HorizontalResolution
  - ImageSharp.Image{ImageSharp.Color,System.UInt32}.VerticalResolution
  - ImageSharp.Image{ImageSharp.Color,System.UInt32}.InchWidth
  - ImageSharp.Image{ImageSharp.Color,System.UInt32}.InchHeight
  - ImageSharp.Image{ImageSharp.Color,System.UInt32}.IsAnimated
  - ImageSharp.Image{ImageSharp.Color,System.UInt32}.RepeatCount
  - ImageSharp.Image{ImageSharp.Color,System.UInt32}.Frames
  - ImageSharp.Image{ImageSharp.Color,System.UInt32}.Properties
  - ImageSharp.Image{ImageSharp.Color,System.UInt32}.CurrentImageFormat
  - ImageSharp.Image{ImageSharp.Color,System.UInt32}.ExifProfile
  - ImageSharp.Image{ImageSharp.Color,System.UInt32}.Save(System.IO.Stream)
  - ImageSharp.Image{ImageSharp.Color,System.UInt32}.Save(System.IO.Stream,ImageSharp.Formats.IImageFormat)
  - ImageSharp.Image{ImageSharp.Color,System.UInt32}.Save(System.IO.Stream,ImageSharp.Formats.IImageEncoder)
  - ImageSharp.Image{ImageSharp.Color,System.UInt32}.ToString
  - ImageSharp.Image{ImageSharp.Color,System.UInt32}.ToBase64String
  - ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.MaxWidth
  - ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.MaxHeight
  - ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.Pixels
  - ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.Width
  - ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.Height
  - ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.PixelRatio
  - ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.Bounds
  - ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.Quality
  - ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.FrameDelay
  - ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.InitPixels(System.Int32,System.Int32)
  - ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.SetPixels(System.Int32,System.Int32,ImageSharp.Color[])
  - ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.ClonePixels(System.Int32,System.Int32,ImageSharp.Color[])
  - ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.Lock
  - ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.CopyProperties(ImageSharp.ImageBase{ImageSharp.Color,System.UInt32})
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ImageSharp.Image.#ctor
  commentId: M:ImageSharp.Image.#ctor
  id: '#ctor'
  parent: ImageSharp.Image
  langs:
  - csharp
  - vb
  name: Image()
  nameWithType: Image.Image()
  fullName: ImageSharp.Image.Image()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 91
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp
  summary: "\nInitializes a new instance of the <xref href=\"ImageSharp.Image\" data-throw-if-not-resolved=\"false\"></xref> class\nwith the height and the width of the image.\n"
  example: []
  syntax:
    content: public Image()
    content.vb: Public Sub New
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ImageSharp.Image.#ctor(System.Int32,System.Int32)
  commentId: M:ImageSharp.Image.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: ImageSharp.Image
  langs:
  - csharp
  - vb
  name: Image(Int32, Int32)
  nameWithType: Image.Image(Int32, Int32)
  fullName: ImageSharp.Image.Image(System.Int32, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 101
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp
  summary: "\nInitializes a new instance of the <xref href=\"ImageSharp.Image\" data-throw-if-not-resolved=\"false\"></xref> class\nwith the height and the width of the image.\n"
  example: []
  syntax:
    content: public Image(int width, int height)
    content.vb: Public Sub New(width As Integer, height As Integer)
    parameters:
    - id: width
      type: System.Int32
      description: The width of the image in pixels.
    - id: height
      type: System.Int32
      description: The height of the image in pixels.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ImageSharp.Image.#ctor(System.IO.Stream)
  commentId: M:ImageSharp.Image.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: ImageSharp.Image
  langs:
  - csharp
  - vb
  name: Image(Stream)
  nameWithType: Image.Image(Stream)
  fullName: ImageSharp.Image.Image(System.IO.Stream)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 113
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp
  summary: "\nInitializes a new instance of the <xref href=\"ImageSharp.Image\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public Image(Stream stream)
    content.vb: Public Sub New(stream As Stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "\nThe stream containing image information.\n"
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if the <em>stream</em> is null.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ImageSharp.Image.#ctor(ImageSharp.Image)
  commentId: M:ImageSharp.Image.#ctor(ImageSharp.Image)
  id: '#ctor(ImageSharp.Image)'
  parent: ImageSharp.Image
  langs:
  - csharp
  - vb
  name: Image(Image)
  nameWithType: Image.Image(Image)
  fullName: ImageSharp.Image.Image(ImageSharp.Image)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 124
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp
  summary: "\nInitializes a new instance of the <xref href=\"ImageSharp.Image\" data-throw-if-not-resolved=\"false\"></xref> class\nby making a copy from another image.\n"
  example: []
  syntax:
    content: public Image(Image other)
    content.vb: Public Sub New(other As Image)
    parameters:
    - id: other
      type: ImageSharp.Image
      description: The other image, where the clone should be made from.
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <em>other</em> is null.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ImageSharp.Image.Lock
  commentId: M:ImageSharp.Image.Lock
  id: Lock
  parent: ImageSharp.Image
  langs:
  - csharp
  - vb
  name: Lock()
  nameWithType: Image.Lock()
  fullName: ImageSharp.Image.Lock()
  type: Method
  source:
    id: Lock
    path: ''
    startLine: 130
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp
  example: []
  syntax:
    content: public override PixelAccessor<Color, uint> Lock()
    content.vb: Public Overrides Function Lock As PixelAccessor(Of Color, UInteger)
    return:
      type: ImageSharp.PixelAccessor{ImageSharp.Color,System.UInt32}
  overridden: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.Lock
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: ImageSharp
  commentId: N:ImageSharp
  isExternal: false
  name: ImageSharp
  nameWithType: ImageSharp
  fullName: ImageSharp
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}
  commentId: T:ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}
  parent: ImageSharp
  definition: ImageSharp.ImageBase`2
  name: ImageBase<Color, UInt32>
  nameWithType: ImageBase<Color, UInt32>
  fullName: ImageSharp.ImageBase<ImageSharp.Color, System.UInt32>
  nameWithType.vb: ImageBase(Of Color, UInt32)
  fullname.vb: ImageSharp.ImageBase(Of ImageSharp.Color, System.UInt32)
  name.vb: ImageBase(Of Color, UInt32)
  spec.csharp:
  - uid: ImageSharp.ImageBase`2
    name: ImageBase
    nameWithType: ImageBase
    fullName: ImageSharp.ImageBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: ImageSharp.Color
    name: Color
    nameWithType: Color
    fullName: ImageSharp.Color
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ImageSharp.ImageBase`2
    name: ImageBase
    nameWithType: ImageBase
    fullName: ImageSharp.ImageBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ImageSharp.Color
    name: Color
    nameWithType: Color
    fullName: ImageSharp.Color
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.Image{ImageSharp.Color,System.UInt32}
  commentId: T:ImageSharp.Image{ImageSharp.Color,System.UInt32}
  parent: ImageSharp
  definition: ImageSharp.Image`2
  name: Image<Color, UInt32>
  nameWithType: Image<Color, UInt32>
  fullName: ImageSharp.Image<ImageSharp.Color, System.UInt32>
  nameWithType.vb: Image(Of Color, UInt32)
  fullname.vb: ImageSharp.Image(Of ImageSharp.Color, System.UInt32)
  name.vb: Image(Of Color, UInt32)
  spec.csharp:
  - uid: ImageSharp.Image`2
    name: Image
    nameWithType: Image
    fullName: ImageSharp.Image
  - name: <
    nameWithType: <
    fullName: <
  - uid: ImageSharp.Color
    name: Color
    nameWithType: Color
    fullName: ImageSharp.Color
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ImageSharp.Image`2
    name: Image
    nameWithType: Image
    fullName: ImageSharp.Image
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ImageSharp.Color
    name: Color
    nameWithType: Color
    fullName: ImageSharp.Color
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.IImageBase{ImageSharp.Color,System.UInt32}
  commentId: T:ImageSharp.IImageBase{ImageSharp.Color,System.UInt32}
  parent: ImageSharp
  definition: ImageSharp.IImageBase`2
  name: IImageBase<Color, UInt32>
  nameWithType: IImageBase<Color, UInt32>
  fullName: ImageSharp.IImageBase<ImageSharp.Color, System.UInt32>
  nameWithType.vb: IImageBase(Of Color, UInt32)
  fullname.vb: ImageSharp.IImageBase(Of ImageSharp.Color, System.UInt32)
  name.vb: IImageBase(Of Color, UInt32)
  spec.csharp:
  - uid: ImageSharp.IImageBase`2
    name: IImageBase
    nameWithType: IImageBase
    fullName: ImageSharp.IImageBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: ImageSharp.Color
    name: Color
    nameWithType: Color
    fullName: ImageSharp.Color
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ImageSharp.IImageBase`2
    name: IImageBase
    nameWithType: IImageBase
    fullName: ImageSharp.IImageBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ImageSharp.Color
    name: Color
    nameWithType: Color
    fullName: ImageSharp.Color
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.IImageBase
  commentId: T:ImageSharp.IImageBase
  parent: ImageSharp
  isExternal: false
  name: IImageBase
  nameWithType: IImageBase
  fullName: ImageSharp.IImageBase
- uid: ImageSharp.Image{ImageSharp.Color,System.UInt32}.DefaultHorizontalResolution
  commentId: F:ImageSharp.Image{ImageSharp.Color,System.UInt32}.DefaultHorizontalResolution
  parent: ImageSharp.Image{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.Image`2.DefaultHorizontalResolution
  name: DefaultHorizontalResolution
  nameWithType: Image<Color, UInt32>.DefaultHorizontalResolution
  fullName: ImageSharp.Image<ImageSharp.Color, System.UInt32>.DefaultHorizontalResolution
  nameWithType.vb: Image(Of Color, UInt32).DefaultHorizontalResolution
  fullname.vb: ImageSharp.Image(Of ImageSharp.Color, System.UInt32).DefaultHorizontalResolution
- uid: ImageSharp.Image{ImageSharp.Color,System.UInt32}.DefaultVerticalResolution
  commentId: F:ImageSharp.Image{ImageSharp.Color,System.UInt32}.DefaultVerticalResolution
  parent: ImageSharp.Image{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.Image`2.DefaultVerticalResolution
  name: DefaultVerticalResolution
  nameWithType: Image<Color, UInt32>.DefaultVerticalResolution
  fullName: ImageSharp.Image<ImageSharp.Color, System.UInt32>.DefaultVerticalResolution
  nameWithType.vb: Image(Of Color, UInt32).DefaultVerticalResolution
  fullname.vb: ImageSharp.Image(Of ImageSharp.Color, System.UInt32).DefaultVerticalResolution
- uid: ImageSharp.Image{ImageSharp.Color,System.UInt32}.Formats
  commentId: P:ImageSharp.Image{ImageSharp.Color,System.UInt32}.Formats
  parent: ImageSharp.Image{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.Image`2.Formats
  name: Formats
  nameWithType: Image<Color, UInt32>.Formats
  fullName: ImageSharp.Image<ImageSharp.Color, System.UInt32>.Formats
  nameWithType.vb: Image(Of Color, UInt32).Formats
  fullname.vb: ImageSharp.Image(Of ImageSharp.Color, System.UInt32).Formats
- uid: ImageSharp.Image{ImageSharp.Color,System.UInt32}.HorizontalResolution
  commentId: P:ImageSharp.Image{ImageSharp.Color,System.UInt32}.HorizontalResolution
  parent: ImageSharp.Image{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.Image`2.HorizontalResolution
  name: HorizontalResolution
  nameWithType: Image<Color, UInt32>.HorizontalResolution
  fullName: ImageSharp.Image<ImageSharp.Color, System.UInt32>.HorizontalResolution
  nameWithType.vb: Image(Of Color, UInt32).HorizontalResolution
  fullname.vb: ImageSharp.Image(Of ImageSharp.Color, System.UInt32).HorizontalResolution
- uid: ImageSharp.Image{ImageSharp.Color,System.UInt32}.VerticalResolution
  commentId: P:ImageSharp.Image{ImageSharp.Color,System.UInt32}.VerticalResolution
  parent: ImageSharp.Image{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.Image`2.VerticalResolution
  name: VerticalResolution
  nameWithType: Image<Color, UInt32>.VerticalResolution
  fullName: ImageSharp.Image<ImageSharp.Color, System.UInt32>.VerticalResolution
  nameWithType.vb: Image(Of Color, UInt32).VerticalResolution
  fullname.vb: ImageSharp.Image(Of ImageSharp.Color, System.UInt32).VerticalResolution
- uid: ImageSharp.Image{ImageSharp.Color,System.UInt32}.InchWidth
  commentId: P:ImageSharp.Image{ImageSharp.Color,System.UInt32}.InchWidth
  parent: ImageSharp.Image{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.Image`2.InchWidth
  name: InchWidth
  nameWithType: Image<Color, UInt32>.InchWidth
  fullName: ImageSharp.Image<ImageSharp.Color, System.UInt32>.InchWidth
  nameWithType.vb: Image(Of Color, UInt32).InchWidth
  fullname.vb: ImageSharp.Image(Of ImageSharp.Color, System.UInt32).InchWidth
- uid: ImageSharp.Image{ImageSharp.Color,System.UInt32}.InchHeight
  commentId: P:ImageSharp.Image{ImageSharp.Color,System.UInt32}.InchHeight
  parent: ImageSharp.Image{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.Image`2.InchHeight
  name: InchHeight
  nameWithType: Image<Color, UInt32>.InchHeight
  fullName: ImageSharp.Image<ImageSharp.Color, System.UInt32>.InchHeight
  nameWithType.vb: Image(Of Color, UInt32).InchHeight
  fullname.vb: ImageSharp.Image(Of ImageSharp.Color, System.UInt32).InchHeight
- uid: ImageSharp.Image{ImageSharp.Color,System.UInt32}.IsAnimated
  commentId: P:ImageSharp.Image{ImageSharp.Color,System.UInt32}.IsAnimated
  parent: ImageSharp.Image{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.Image`2.IsAnimated
  name: IsAnimated
  nameWithType: Image<Color, UInt32>.IsAnimated
  fullName: ImageSharp.Image<ImageSharp.Color, System.UInt32>.IsAnimated
  nameWithType.vb: Image(Of Color, UInt32).IsAnimated
  fullname.vb: ImageSharp.Image(Of ImageSharp.Color, System.UInt32).IsAnimated
- uid: ImageSharp.Image{ImageSharp.Color,System.UInt32}.RepeatCount
  commentId: P:ImageSharp.Image{ImageSharp.Color,System.UInt32}.RepeatCount
  parent: ImageSharp.Image{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.Image`2.RepeatCount
  name: RepeatCount
  nameWithType: Image<Color, UInt32>.RepeatCount
  fullName: ImageSharp.Image<ImageSharp.Color, System.UInt32>.RepeatCount
  nameWithType.vb: Image(Of Color, UInt32).RepeatCount
  fullname.vb: ImageSharp.Image(Of ImageSharp.Color, System.UInt32).RepeatCount
- uid: ImageSharp.Image{ImageSharp.Color,System.UInt32}.Frames
  commentId: P:ImageSharp.Image{ImageSharp.Color,System.UInt32}.Frames
  parent: ImageSharp.Image{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.Image`2.Frames
  name: Frames
  nameWithType: Image<Color, UInt32>.Frames
  fullName: ImageSharp.Image<ImageSharp.Color, System.UInt32>.Frames
  nameWithType.vb: Image(Of Color, UInt32).Frames
  fullname.vb: ImageSharp.Image(Of ImageSharp.Color, System.UInt32).Frames
- uid: ImageSharp.Image{ImageSharp.Color,System.UInt32}.Properties
  commentId: P:ImageSharp.Image{ImageSharp.Color,System.UInt32}.Properties
  parent: ImageSharp.Image{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.Image`2.Properties
  name: Properties
  nameWithType: Image<Color, UInt32>.Properties
  fullName: ImageSharp.Image<ImageSharp.Color, System.UInt32>.Properties
  nameWithType.vb: Image(Of Color, UInt32).Properties
  fullname.vb: ImageSharp.Image(Of ImageSharp.Color, System.UInt32).Properties
- uid: ImageSharp.Image{ImageSharp.Color,System.UInt32}.CurrentImageFormat
  commentId: P:ImageSharp.Image{ImageSharp.Color,System.UInt32}.CurrentImageFormat
  parent: ImageSharp.Image{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.Image`2.CurrentImageFormat
  name: CurrentImageFormat
  nameWithType: Image<Color, UInt32>.CurrentImageFormat
  fullName: ImageSharp.Image<ImageSharp.Color, System.UInt32>.CurrentImageFormat
  nameWithType.vb: Image(Of Color, UInt32).CurrentImageFormat
  fullname.vb: ImageSharp.Image(Of ImageSharp.Color, System.UInt32).CurrentImageFormat
- uid: ImageSharp.Image{ImageSharp.Color,System.UInt32}.ExifProfile
  commentId: P:ImageSharp.Image{ImageSharp.Color,System.UInt32}.ExifProfile
  parent: ImageSharp.Image{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.Image`2.ExifProfile
  name: ExifProfile
  nameWithType: Image<Color, UInt32>.ExifProfile
  fullName: ImageSharp.Image<ImageSharp.Color, System.UInt32>.ExifProfile
  nameWithType.vb: Image(Of Color, UInt32).ExifProfile
  fullname.vb: ImageSharp.Image(Of ImageSharp.Color, System.UInt32).ExifProfile
- uid: ImageSharp.Image{ImageSharp.Color,System.UInt32}.Save(System.IO.Stream)
  commentId: M:ImageSharp.Image{ImageSharp.Color,System.UInt32}.Save(System.IO.Stream)
  parent: ImageSharp.Image{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.Image`2.Save(System.IO.Stream)
  name: Save(Stream)
  nameWithType: Image<Color, UInt32>.Save(Stream)
  fullName: ImageSharp.Image<ImageSharp.Color, System.UInt32>.Save(System.IO.Stream)
  nameWithType.vb: Image(Of Color, UInt32).Save(Stream)
  fullname.vb: ImageSharp.Image(Of ImageSharp.Color, System.UInt32).Save(System.IO.Stream)
  spec.csharp:
  - uid: ImageSharp.Image`2.Save(System.IO.Stream)
    name: Save
    nameWithType: Image<Color, UInt32>.Save
    fullName: ImageSharp.Image<ImageSharp.Color, System.UInt32>.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.Image`2.Save(System.IO.Stream)
    name: Save
    nameWithType: Image(Of Color, UInt32).Save
    fullName: ImageSharp.Image(Of ImageSharp.Color, System.UInt32).Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.Image{ImageSharp.Color,System.UInt32}.Save(System.IO.Stream,ImageSharp.Formats.IImageFormat)
  commentId: M:ImageSharp.Image{ImageSharp.Color,System.UInt32}.Save(System.IO.Stream,ImageSharp.Formats.IImageFormat)
  parent: ImageSharp.Image{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.Image`2.Save(System.IO.Stream,ImageSharp.Formats.IImageFormat)
  name: Save(Stream, IImageFormat)
  nameWithType: Image<Color, UInt32>.Save(Stream, IImageFormat)
  fullName: ImageSharp.Image<ImageSharp.Color, System.UInt32>.Save(System.IO.Stream, ImageSharp.Formats.IImageFormat)
  nameWithType.vb: Image(Of Color, UInt32).Save(Stream, IImageFormat)
  fullname.vb: ImageSharp.Image(Of ImageSharp.Color, System.UInt32).Save(System.IO.Stream, ImageSharp.Formats.IImageFormat)
  spec.csharp:
  - uid: ImageSharp.Image`2.Save(System.IO.Stream,ImageSharp.Formats.IImageFormat)
    name: Save
    nameWithType: Image<Color, UInt32>.Save
    fullName: ImageSharp.Image<ImageSharp.Color, System.UInt32>.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ImageSharp.Formats.IImageFormat
    name: IImageFormat
    nameWithType: IImageFormat
    fullName: ImageSharp.Formats.IImageFormat
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.Image`2.Save(System.IO.Stream,ImageSharp.Formats.IImageFormat)
    name: Save
    nameWithType: Image(Of Color, UInt32).Save
    fullName: ImageSharp.Image(Of ImageSharp.Color, System.UInt32).Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ImageSharp.Formats.IImageFormat
    name: IImageFormat
    nameWithType: IImageFormat
    fullName: ImageSharp.Formats.IImageFormat
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.Image{ImageSharp.Color,System.UInt32}.Save(System.IO.Stream,ImageSharp.Formats.IImageEncoder)
  commentId: M:ImageSharp.Image{ImageSharp.Color,System.UInt32}.Save(System.IO.Stream,ImageSharp.Formats.IImageEncoder)
  parent: ImageSharp.Image{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.Image`2.Save(System.IO.Stream,ImageSharp.Formats.IImageEncoder)
  name: Save(Stream, IImageEncoder)
  nameWithType: Image<Color, UInt32>.Save(Stream, IImageEncoder)
  fullName: ImageSharp.Image<ImageSharp.Color, System.UInt32>.Save(System.IO.Stream, ImageSharp.Formats.IImageEncoder)
  nameWithType.vb: Image(Of Color, UInt32).Save(Stream, IImageEncoder)
  fullname.vb: ImageSharp.Image(Of ImageSharp.Color, System.UInt32).Save(System.IO.Stream, ImageSharp.Formats.IImageEncoder)
  spec.csharp:
  - uid: ImageSharp.Image`2.Save(System.IO.Stream,ImageSharp.Formats.IImageEncoder)
    name: Save
    nameWithType: Image<Color, UInt32>.Save
    fullName: ImageSharp.Image<ImageSharp.Color, System.UInt32>.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ImageSharp.Formats.IImageEncoder
    name: IImageEncoder
    nameWithType: IImageEncoder
    fullName: ImageSharp.Formats.IImageEncoder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.Image`2.Save(System.IO.Stream,ImageSharp.Formats.IImageEncoder)
    name: Save
    nameWithType: Image(Of Color, UInt32).Save
    fullName: ImageSharp.Image(Of ImageSharp.Color, System.UInt32).Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ImageSharp.Formats.IImageEncoder
    name: IImageEncoder
    nameWithType: IImageEncoder
    fullName: ImageSharp.Formats.IImageEncoder
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.Image{ImageSharp.Color,System.UInt32}.ToString
  commentId: M:ImageSharp.Image{ImageSharp.Color,System.UInt32}.ToString
  parent: ImageSharp.Image{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.Image`2.ToString
  name: ToString()
  nameWithType: Image<Color, UInt32>.ToString()
  fullName: ImageSharp.Image<ImageSharp.Color, System.UInt32>.ToString()
  nameWithType.vb: Image(Of Color, UInt32).ToString()
  fullname.vb: ImageSharp.Image(Of ImageSharp.Color, System.UInt32).ToString()
  spec.csharp:
  - uid: ImageSharp.Image`2.ToString
    name: ToString
    nameWithType: Image<Color, UInt32>.ToString
    fullName: ImageSharp.Image<ImageSharp.Color, System.UInt32>.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.Image`2.ToString
    name: ToString
    nameWithType: Image(Of Color, UInt32).ToString
    fullName: ImageSharp.Image(Of ImageSharp.Color, System.UInt32).ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.Image{ImageSharp.Color,System.UInt32}.ToBase64String
  commentId: M:ImageSharp.Image{ImageSharp.Color,System.UInt32}.ToBase64String
  parent: ImageSharp.Image{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.Image`2.ToBase64String
  name: ToBase64String()
  nameWithType: Image<Color, UInt32>.ToBase64String()
  fullName: ImageSharp.Image<ImageSharp.Color, System.UInt32>.ToBase64String()
  nameWithType.vb: Image(Of Color, UInt32).ToBase64String()
  fullname.vb: ImageSharp.Image(Of ImageSharp.Color, System.UInt32).ToBase64String()
  spec.csharp:
  - uid: ImageSharp.Image`2.ToBase64String
    name: ToBase64String
    nameWithType: Image<Color, UInt32>.ToBase64String
    fullName: ImageSharp.Image<ImageSharp.Color, System.UInt32>.ToBase64String
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.Image`2.ToBase64String
    name: ToBase64String
    nameWithType: Image(Of Color, UInt32).ToBase64String
    fullName: ImageSharp.Image(Of ImageSharp.Color, System.UInt32).ToBase64String
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.MaxWidth
  commentId: P:ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.MaxWidth
  parent: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.ImageBase`2.MaxWidth
  name: MaxWidth
  nameWithType: ImageBase<Color, UInt32>.MaxWidth
  fullName: ImageSharp.ImageBase<ImageSharp.Color, System.UInt32>.MaxWidth
  nameWithType.vb: ImageBase(Of Color, UInt32).MaxWidth
  fullname.vb: ImageSharp.ImageBase(Of ImageSharp.Color, System.UInt32).MaxWidth
- uid: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.MaxHeight
  commentId: P:ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.MaxHeight
  parent: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.ImageBase`2.MaxHeight
  name: MaxHeight
  nameWithType: ImageBase<Color, UInt32>.MaxHeight
  fullName: ImageSharp.ImageBase<ImageSharp.Color, System.UInt32>.MaxHeight
  nameWithType.vb: ImageBase(Of Color, UInt32).MaxHeight
  fullname.vb: ImageSharp.ImageBase(Of ImageSharp.Color, System.UInt32).MaxHeight
- uid: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.Pixels
  commentId: P:ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.Pixels
  parent: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.ImageBase`2.Pixels
  name: Pixels
  nameWithType: ImageBase<Color, UInt32>.Pixels
  fullName: ImageSharp.ImageBase<ImageSharp.Color, System.UInt32>.Pixels
  nameWithType.vb: ImageBase(Of Color, UInt32).Pixels
  fullname.vb: ImageSharp.ImageBase(Of ImageSharp.Color, System.UInt32).Pixels
- uid: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.Width
  commentId: P:ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.Width
  parent: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.ImageBase`2.Width
  name: Width
  nameWithType: ImageBase<Color, UInt32>.Width
  fullName: ImageSharp.ImageBase<ImageSharp.Color, System.UInt32>.Width
  nameWithType.vb: ImageBase(Of Color, UInt32).Width
  fullname.vb: ImageSharp.ImageBase(Of ImageSharp.Color, System.UInt32).Width
- uid: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.Height
  commentId: P:ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.Height
  parent: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.ImageBase`2.Height
  name: Height
  nameWithType: ImageBase<Color, UInt32>.Height
  fullName: ImageSharp.ImageBase<ImageSharp.Color, System.UInt32>.Height
  nameWithType.vb: ImageBase(Of Color, UInt32).Height
  fullname.vb: ImageSharp.ImageBase(Of ImageSharp.Color, System.UInt32).Height
- uid: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.PixelRatio
  commentId: P:ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.PixelRatio
  parent: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.ImageBase`2.PixelRatio
  name: PixelRatio
  nameWithType: ImageBase<Color, UInt32>.PixelRatio
  fullName: ImageSharp.ImageBase<ImageSharp.Color, System.UInt32>.PixelRatio
  nameWithType.vb: ImageBase(Of Color, UInt32).PixelRatio
  fullname.vb: ImageSharp.ImageBase(Of ImageSharp.Color, System.UInt32).PixelRatio
- uid: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.Bounds
  commentId: P:ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.Bounds
  parent: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.ImageBase`2.Bounds
  name: Bounds
  nameWithType: ImageBase<Color, UInt32>.Bounds
  fullName: ImageSharp.ImageBase<ImageSharp.Color, System.UInt32>.Bounds
  nameWithType.vb: ImageBase(Of Color, UInt32).Bounds
  fullname.vb: ImageSharp.ImageBase(Of ImageSharp.Color, System.UInt32).Bounds
- uid: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.Quality
  commentId: P:ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.Quality
  parent: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.ImageBase`2.Quality
  name: Quality
  nameWithType: ImageBase<Color, UInt32>.Quality
  fullName: ImageSharp.ImageBase<ImageSharp.Color, System.UInt32>.Quality
  nameWithType.vb: ImageBase(Of Color, UInt32).Quality
  fullname.vb: ImageSharp.ImageBase(Of ImageSharp.Color, System.UInt32).Quality
- uid: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.FrameDelay
  commentId: P:ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.FrameDelay
  parent: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.ImageBase`2.FrameDelay
  name: FrameDelay
  nameWithType: ImageBase<Color, UInt32>.FrameDelay
  fullName: ImageSharp.ImageBase<ImageSharp.Color, System.UInt32>.FrameDelay
  nameWithType.vb: ImageBase(Of Color, UInt32).FrameDelay
  fullname.vb: ImageSharp.ImageBase(Of ImageSharp.Color, System.UInt32).FrameDelay
- uid: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.InitPixels(System.Int32,System.Int32)
  commentId: M:ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.InitPixels(System.Int32,System.Int32)
  parent: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.ImageBase`2.InitPixels(System.Int32,System.Int32)
  name: InitPixels(Int32, Int32)
  nameWithType: ImageBase<Color, UInt32>.InitPixels(Int32, Int32)
  fullName: ImageSharp.ImageBase<ImageSharp.Color, System.UInt32>.InitPixels(System.Int32, System.Int32)
  nameWithType.vb: ImageBase(Of Color, UInt32).InitPixels(Int32, Int32)
  fullname.vb: ImageSharp.ImageBase(Of ImageSharp.Color, System.UInt32).InitPixels(System.Int32, System.Int32)
  spec.csharp:
  - uid: ImageSharp.ImageBase`2.InitPixels(System.Int32,System.Int32)
    name: InitPixels
    nameWithType: ImageBase<Color, UInt32>.InitPixels
    fullName: ImageSharp.ImageBase<ImageSharp.Color, System.UInt32>.InitPixels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.ImageBase`2.InitPixels(System.Int32,System.Int32)
    name: InitPixels
    nameWithType: ImageBase(Of Color, UInt32).InitPixels
    fullName: ImageSharp.ImageBase(Of ImageSharp.Color, System.UInt32).InitPixels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.SetPixels(System.Int32,System.Int32,ImageSharp.Color[])
  commentId: M:ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.SetPixels(System.Int32,System.Int32,ImageSharp.Color[])
  parent: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.ImageBase`2.SetPixels(System.Int32,System.Int32,`0[])
  name: SetPixels(Int32, Int32, Color[])
  nameWithType: ImageBase<Color, UInt32>.SetPixels(Int32, Int32, Color[])
  fullName: ImageSharp.ImageBase<ImageSharp.Color, System.UInt32>.SetPixels(System.Int32, System.Int32, ImageSharp.Color[])
  nameWithType.vb: ImageBase(Of Color, UInt32).SetPixels(Int32, Int32, Color())
  fullname.vb: ImageSharp.ImageBase(Of ImageSharp.Color, System.UInt32).SetPixels(System.Int32, System.Int32, ImageSharp.Color())
  name.vb: SetPixels(Int32, Int32, Color())
  spec.csharp:
  - uid: ImageSharp.ImageBase`2.SetPixels(System.Int32,System.Int32,`0[])
    name: SetPixels
    nameWithType: ImageBase<Color, UInt32>.SetPixels
    fullName: ImageSharp.ImageBase<ImageSharp.Color, System.UInt32>.SetPixels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ImageSharp.Color
    name: Color
    nameWithType: Color
    fullName: ImageSharp.Color
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.ImageBase`2.SetPixels(System.Int32,System.Int32,`0[])
    name: SetPixels
    nameWithType: ImageBase(Of Color, UInt32).SetPixels
    fullName: ImageSharp.ImageBase(Of ImageSharp.Color, System.UInt32).SetPixels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ImageSharp.Color
    name: Color
    nameWithType: Color
    fullName: ImageSharp.Color
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.ClonePixels(System.Int32,System.Int32,ImageSharp.Color[])
  commentId: M:ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.ClonePixels(System.Int32,System.Int32,ImageSharp.Color[])
  parent: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.ImageBase`2.ClonePixels(System.Int32,System.Int32,`0[])
  name: ClonePixels(Int32, Int32, Color[])
  nameWithType: ImageBase<Color, UInt32>.ClonePixels(Int32, Int32, Color[])
  fullName: ImageSharp.ImageBase<ImageSharp.Color, System.UInt32>.ClonePixels(System.Int32, System.Int32, ImageSharp.Color[])
  nameWithType.vb: ImageBase(Of Color, UInt32).ClonePixels(Int32, Int32, Color())
  fullname.vb: ImageSharp.ImageBase(Of ImageSharp.Color, System.UInt32).ClonePixels(System.Int32, System.Int32, ImageSharp.Color())
  name.vb: ClonePixels(Int32, Int32, Color())
  spec.csharp:
  - uid: ImageSharp.ImageBase`2.ClonePixels(System.Int32,System.Int32,`0[])
    name: ClonePixels
    nameWithType: ImageBase<Color, UInt32>.ClonePixels
    fullName: ImageSharp.ImageBase<ImageSharp.Color, System.UInt32>.ClonePixels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ImageSharp.Color
    name: Color
    nameWithType: Color
    fullName: ImageSharp.Color
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.ImageBase`2.ClonePixels(System.Int32,System.Int32,`0[])
    name: ClonePixels
    nameWithType: ImageBase(Of Color, UInt32).ClonePixels
    fullName: ImageSharp.ImageBase(Of ImageSharp.Color, System.UInt32).ClonePixels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ImageSharp.Color
    name: Color
    nameWithType: Color
    fullName: ImageSharp.Color
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.Lock
  commentId: M:ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.Lock
  parent: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.ImageBase`2.Lock
  name: Lock()
  nameWithType: ImageBase<Color, UInt32>.Lock()
  fullName: ImageSharp.ImageBase<ImageSharp.Color, System.UInt32>.Lock()
  nameWithType.vb: ImageBase(Of Color, UInt32).Lock()
  fullname.vb: ImageSharp.ImageBase(Of ImageSharp.Color, System.UInt32).Lock()
  spec.csharp:
  - uid: ImageSharp.ImageBase`2.Lock
    name: Lock
    nameWithType: ImageBase<Color, UInt32>.Lock
    fullName: ImageSharp.ImageBase<ImageSharp.Color, System.UInt32>.Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.ImageBase`2.Lock
    name: Lock
    nameWithType: ImageBase(Of Color, UInt32).Lock
    fullName: ImageSharp.ImageBase(Of ImageSharp.Color, System.UInt32).Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.CopyProperties(ImageSharp.ImageBase{ImageSharp.Color,System.UInt32})
  commentId: M:ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}.CopyProperties(ImageSharp.ImageBase{ImageSharp.Color,System.UInt32})
  parent: ImageSharp.ImageBase{ImageSharp.Color,System.UInt32}
  definition: ImageSharp.ImageBase`2.CopyProperties(ImageSharp.ImageBase{`0,`1})
  name: CopyProperties(ImageBase<Color, UInt32>)
  nameWithType: ImageBase<Color, UInt32>.CopyProperties(ImageBase<Color, UInt32>)
  fullName: ImageSharp.ImageBase<ImageSharp.Color, System.UInt32>.CopyProperties(ImageSharp.ImageBase<ImageSharp.Color, System.UInt32>)
  nameWithType.vb: ImageBase(Of Color, UInt32).CopyProperties(ImageBase(Of Color, UInt32))
  fullname.vb: ImageSharp.ImageBase(Of ImageSharp.Color, System.UInt32).CopyProperties(ImageSharp.ImageBase(Of ImageSharp.Color, System.UInt32))
  name.vb: CopyProperties(ImageBase(Of Color, UInt32))
  spec.csharp:
  - uid: ImageSharp.ImageBase`2.CopyProperties(ImageSharp.ImageBase{`0,`1})
    name: CopyProperties
    nameWithType: ImageBase<Color, UInt32>.CopyProperties
    fullName: ImageSharp.ImageBase<ImageSharp.Color, System.UInt32>.CopyProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: ImageSharp.ImageBase`2
    name: ImageBase
    nameWithType: ImageBase
    fullName: ImageSharp.ImageBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: ImageSharp.Color
    name: Color
    nameWithType: Color
    fullName: ImageSharp.Color
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.ImageBase`2.CopyProperties(ImageSharp.ImageBase{`0,`1})
    name: CopyProperties
    nameWithType: ImageBase(Of Color, UInt32).CopyProperties
    fullName: ImageSharp.ImageBase(Of ImageSharp.Color, System.UInt32).CopyProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: ImageSharp.ImageBase`2
    name: ImageBase
    nameWithType: ImageBase
    fullName: ImageSharp.ImageBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ImageSharp.Color
    name: Color
    nameWithType: Color
    fullName: ImageSharp.Color
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: ImageSharp.ImageBase`2
  commentId: T:ImageSharp.ImageBase`2
  parent: ImageSharp
  isExternal: false
  name: ImageBase<TColor, TPacked>
  nameWithType: ImageBase<TColor, TPacked>
  fullName: ImageSharp.ImageBase<TColor, TPacked>
  nameWithType.vb: ImageBase(Of TColor, TPacked)
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked)
  name.vb: ImageBase(Of TColor, TPacked)
  spec.csharp:
  - uid: ImageSharp.ImageBase`2
    name: ImageBase
    nameWithType: ImageBase
    fullName: ImageSharp.ImageBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ImageSharp.ImageBase`2
    name: ImageBase
    nameWithType: ImageBase
    fullName: ImageSharp.ImageBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.Image`2
  commentId: T:ImageSharp.Image`2
  parent: ImageSharp
  isExternal: false
  name: Image<TColor, TPacked>
  nameWithType: Image<TColor, TPacked>
  fullName: ImageSharp.Image<TColor, TPacked>
  nameWithType.vb: Image(Of TColor, TPacked)
  fullname.vb: ImageSharp.Image(Of TColor, TPacked)
  name.vb: Image(Of TColor, TPacked)
  spec.csharp:
  - uid: ImageSharp.Image`2
    name: Image
    nameWithType: Image
    fullName: ImageSharp.Image
  - name: <
    nameWithType: <
    fullName: <
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ImageSharp.Image`2
    name: Image
    nameWithType: Image
    fullName: ImageSharp.Image
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.IImageBase`2
  commentId: T:ImageSharp.IImageBase`2
  isExternal: false
  name: IImageBase<TColor, TPacked>
  nameWithType: IImageBase<TColor, TPacked>
  fullName: ImageSharp.IImageBase<TColor, TPacked>
  nameWithType.vb: IImageBase(Of TColor, TPacked)
  fullname.vb: ImageSharp.IImageBase(Of TColor, TPacked)
  name.vb: IImageBase(Of TColor, TPacked)
  spec.csharp:
  - uid: ImageSharp.IImageBase`2
    name: IImageBase
    nameWithType: IImageBase
    fullName: ImageSharp.IImageBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ImageSharp.IImageBase`2
    name: IImageBase
    nameWithType: IImageBase
    fullName: ImageSharp.IImageBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.Image`2.DefaultHorizontalResolution
  commentId: F:ImageSharp.Image`2.DefaultHorizontalResolution
  isExternal: false
  name: DefaultHorizontalResolution
  nameWithType: Image<TColor, TPacked>.DefaultHorizontalResolution
  fullName: ImageSharp.Image<TColor, TPacked>.DefaultHorizontalResolution
  nameWithType.vb: Image(Of TColor, TPacked).DefaultHorizontalResolution
  fullname.vb: ImageSharp.Image(Of TColor, TPacked).DefaultHorizontalResolution
- uid: ImageSharp.Image`2.DefaultVerticalResolution
  commentId: F:ImageSharp.Image`2.DefaultVerticalResolution
  isExternal: false
  name: DefaultVerticalResolution
  nameWithType: Image<TColor, TPacked>.DefaultVerticalResolution
  fullName: ImageSharp.Image<TColor, TPacked>.DefaultVerticalResolution
  nameWithType.vb: Image(Of TColor, TPacked).DefaultVerticalResolution
  fullname.vb: ImageSharp.Image(Of TColor, TPacked).DefaultVerticalResolution
- uid: ImageSharp.Image`2.Formats
  commentId: P:ImageSharp.Image`2.Formats
  isExternal: false
  name: Formats
  nameWithType: Image<TColor, TPacked>.Formats
  fullName: ImageSharp.Image<TColor, TPacked>.Formats
  nameWithType.vb: Image(Of TColor, TPacked).Formats
  fullname.vb: ImageSharp.Image(Of TColor, TPacked).Formats
- uid: ImageSharp.Image`2.HorizontalResolution
  commentId: P:ImageSharp.Image`2.HorizontalResolution
  isExternal: false
  name: HorizontalResolution
  nameWithType: Image<TColor, TPacked>.HorizontalResolution
  fullName: ImageSharp.Image<TColor, TPacked>.HorizontalResolution
  nameWithType.vb: Image(Of TColor, TPacked).HorizontalResolution
  fullname.vb: ImageSharp.Image(Of TColor, TPacked).HorizontalResolution
- uid: ImageSharp.Image`2.VerticalResolution
  commentId: P:ImageSharp.Image`2.VerticalResolution
  isExternal: false
  name: VerticalResolution
  nameWithType: Image<TColor, TPacked>.VerticalResolution
  fullName: ImageSharp.Image<TColor, TPacked>.VerticalResolution
  nameWithType.vb: Image(Of TColor, TPacked).VerticalResolution
  fullname.vb: ImageSharp.Image(Of TColor, TPacked).VerticalResolution
- uid: ImageSharp.Image`2.InchWidth
  commentId: P:ImageSharp.Image`2.InchWidth
  isExternal: false
  name: InchWidth
  nameWithType: Image<TColor, TPacked>.InchWidth
  fullName: ImageSharp.Image<TColor, TPacked>.InchWidth
  nameWithType.vb: Image(Of TColor, TPacked).InchWidth
  fullname.vb: ImageSharp.Image(Of TColor, TPacked).InchWidth
- uid: ImageSharp.Image`2.InchHeight
  commentId: P:ImageSharp.Image`2.InchHeight
  isExternal: false
  name: InchHeight
  nameWithType: Image<TColor, TPacked>.InchHeight
  fullName: ImageSharp.Image<TColor, TPacked>.InchHeight
  nameWithType.vb: Image(Of TColor, TPacked).InchHeight
  fullname.vb: ImageSharp.Image(Of TColor, TPacked).InchHeight
- uid: ImageSharp.Image`2.IsAnimated
  commentId: P:ImageSharp.Image`2.IsAnimated
  isExternal: false
  name: IsAnimated
  nameWithType: Image<TColor, TPacked>.IsAnimated
  fullName: ImageSharp.Image<TColor, TPacked>.IsAnimated
  nameWithType.vb: Image(Of TColor, TPacked).IsAnimated
  fullname.vb: ImageSharp.Image(Of TColor, TPacked).IsAnimated
- uid: ImageSharp.Image`2.RepeatCount
  commentId: P:ImageSharp.Image`2.RepeatCount
  isExternal: false
  name: RepeatCount
  nameWithType: Image<TColor, TPacked>.RepeatCount
  fullName: ImageSharp.Image<TColor, TPacked>.RepeatCount
  nameWithType.vb: Image(Of TColor, TPacked).RepeatCount
  fullname.vb: ImageSharp.Image(Of TColor, TPacked).RepeatCount
- uid: ImageSharp.Image`2.Frames
  commentId: P:ImageSharp.Image`2.Frames
  isExternal: false
  name: Frames
  nameWithType: Image<TColor, TPacked>.Frames
  fullName: ImageSharp.Image<TColor, TPacked>.Frames
  nameWithType.vb: Image(Of TColor, TPacked).Frames
  fullname.vb: ImageSharp.Image(Of TColor, TPacked).Frames
- uid: ImageSharp.Image`2.Properties
  commentId: P:ImageSharp.Image`2.Properties
  isExternal: false
  name: Properties
  nameWithType: Image<TColor, TPacked>.Properties
  fullName: ImageSharp.Image<TColor, TPacked>.Properties
  nameWithType.vb: Image(Of TColor, TPacked).Properties
  fullname.vb: ImageSharp.Image(Of TColor, TPacked).Properties
- uid: ImageSharp.Image`2.CurrentImageFormat
  commentId: P:ImageSharp.Image`2.CurrentImageFormat
  isExternal: false
  name: CurrentImageFormat
  nameWithType: Image<TColor, TPacked>.CurrentImageFormat
  fullName: ImageSharp.Image<TColor, TPacked>.CurrentImageFormat
  nameWithType.vb: Image(Of TColor, TPacked).CurrentImageFormat
  fullname.vb: ImageSharp.Image(Of TColor, TPacked).CurrentImageFormat
- uid: ImageSharp.Image`2.ExifProfile
  commentId: P:ImageSharp.Image`2.ExifProfile
  isExternal: false
  name: ExifProfile
  nameWithType: Image<TColor, TPacked>.ExifProfile
  fullName: ImageSharp.Image<TColor, TPacked>.ExifProfile
  nameWithType.vb: Image(Of TColor, TPacked).ExifProfile
  fullname.vb: ImageSharp.Image(Of TColor, TPacked).ExifProfile
- uid: ImageSharp.Image`2.Save(System.IO.Stream)
  commentId: M:ImageSharp.Image`2.Save(System.IO.Stream)
  isExternal: true
  name: Save(Stream)
  nameWithType: Image<TColor, TPacked>.Save(Stream)
  fullName: ImageSharp.Image<TColor, TPacked>.Save(System.IO.Stream)
  nameWithType.vb: Image(Of TColor, TPacked).Save(Stream)
  fullname.vb: ImageSharp.Image(Of TColor, TPacked).Save(System.IO.Stream)
  spec.csharp:
  - uid: ImageSharp.Image`2.Save(System.IO.Stream)
    name: Save
    nameWithType: Image<TColor, TPacked>.Save
    fullName: ImageSharp.Image<TColor, TPacked>.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.Image`2.Save(System.IO.Stream)
    name: Save
    nameWithType: Image(Of TColor, TPacked).Save
    fullName: ImageSharp.Image(Of TColor, TPacked).Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.Image`2.Save(System.IO.Stream,ImageSharp.Formats.IImageFormat)
  commentId: M:ImageSharp.Image`2.Save(System.IO.Stream,ImageSharp.Formats.IImageFormat)
  isExternal: true
  name: Save(Stream, IImageFormat)
  nameWithType: Image<TColor, TPacked>.Save(Stream, IImageFormat)
  fullName: ImageSharp.Image<TColor, TPacked>.Save(System.IO.Stream, ImageSharp.Formats.IImageFormat)
  nameWithType.vb: Image(Of TColor, TPacked).Save(Stream, IImageFormat)
  fullname.vb: ImageSharp.Image(Of TColor, TPacked).Save(System.IO.Stream, ImageSharp.Formats.IImageFormat)
  spec.csharp:
  - uid: ImageSharp.Image`2.Save(System.IO.Stream,ImageSharp.Formats.IImageFormat)
    name: Save
    nameWithType: Image<TColor, TPacked>.Save
    fullName: ImageSharp.Image<TColor, TPacked>.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ImageSharp.Formats.IImageFormat
    name: IImageFormat
    nameWithType: IImageFormat
    fullName: ImageSharp.Formats.IImageFormat
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.Image`2.Save(System.IO.Stream,ImageSharp.Formats.IImageFormat)
    name: Save
    nameWithType: Image(Of TColor, TPacked).Save
    fullName: ImageSharp.Image(Of TColor, TPacked).Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ImageSharp.Formats.IImageFormat
    name: IImageFormat
    nameWithType: IImageFormat
    fullName: ImageSharp.Formats.IImageFormat
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.Image`2.Save(System.IO.Stream,ImageSharp.Formats.IImageEncoder)
  commentId: M:ImageSharp.Image`2.Save(System.IO.Stream,ImageSharp.Formats.IImageEncoder)
  isExternal: true
  name: Save(Stream, IImageEncoder)
  nameWithType: Image<TColor, TPacked>.Save(Stream, IImageEncoder)
  fullName: ImageSharp.Image<TColor, TPacked>.Save(System.IO.Stream, ImageSharp.Formats.IImageEncoder)
  nameWithType.vb: Image(Of TColor, TPacked).Save(Stream, IImageEncoder)
  fullname.vb: ImageSharp.Image(Of TColor, TPacked).Save(System.IO.Stream, ImageSharp.Formats.IImageEncoder)
  spec.csharp:
  - uid: ImageSharp.Image`2.Save(System.IO.Stream,ImageSharp.Formats.IImageEncoder)
    name: Save
    nameWithType: Image<TColor, TPacked>.Save
    fullName: ImageSharp.Image<TColor, TPacked>.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ImageSharp.Formats.IImageEncoder
    name: IImageEncoder
    nameWithType: IImageEncoder
    fullName: ImageSharp.Formats.IImageEncoder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.Image`2.Save(System.IO.Stream,ImageSharp.Formats.IImageEncoder)
    name: Save
    nameWithType: Image(Of TColor, TPacked).Save
    fullName: ImageSharp.Image(Of TColor, TPacked).Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ImageSharp.Formats.IImageEncoder
    name: IImageEncoder
    nameWithType: IImageEncoder
    fullName: ImageSharp.Formats.IImageEncoder
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.Image`2.ToString
  commentId: M:ImageSharp.Image`2.ToString
  isExternal: false
  name: ToString()
  nameWithType: Image<TColor, TPacked>.ToString()
  fullName: ImageSharp.Image<TColor, TPacked>.ToString()
  nameWithType.vb: Image(Of TColor, TPacked).ToString()
  fullname.vb: ImageSharp.Image(Of TColor, TPacked).ToString()
  spec.csharp:
  - uid: ImageSharp.Image`2.ToString
    name: ToString
    nameWithType: Image<TColor, TPacked>.ToString
    fullName: ImageSharp.Image<TColor, TPacked>.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.Image`2.ToString
    name: ToString
    nameWithType: Image(Of TColor, TPacked).ToString
    fullName: ImageSharp.Image(Of TColor, TPacked).ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.Image`2.ToBase64String
  commentId: M:ImageSharp.Image`2.ToBase64String
  isExternal: false
  name: ToBase64String()
  nameWithType: Image<TColor, TPacked>.ToBase64String()
  fullName: ImageSharp.Image<TColor, TPacked>.ToBase64String()
  nameWithType.vb: Image(Of TColor, TPacked).ToBase64String()
  fullname.vb: ImageSharp.Image(Of TColor, TPacked).ToBase64String()
  spec.csharp:
  - uid: ImageSharp.Image`2.ToBase64String
    name: ToBase64String
    nameWithType: Image<TColor, TPacked>.ToBase64String
    fullName: ImageSharp.Image<TColor, TPacked>.ToBase64String
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.Image`2.ToBase64String
    name: ToBase64String
    nameWithType: Image(Of TColor, TPacked).ToBase64String
    fullName: ImageSharp.Image(Of TColor, TPacked).ToBase64String
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.ImageBase`2.MaxWidth
  commentId: P:ImageSharp.ImageBase`2.MaxWidth
  isExternal: false
  name: MaxWidth
  nameWithType: ImageBase<TColor, TPacked>.MaxWidth
  fullName: ImageSharp.ImageBase<TColor, TPacked>.MaxWidth
  nameWithType.vb: ImageBase(Of TColor, TPacked).MaxWidth
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).MaxWidth
- uid: ImageSharp.ImageBase`2.MaxHeight
  commentId: P:ImageSharp.ImageBase`2.MaxHeight
  isExternal: false
  name: MaxHeight
  nameWithType: ImageBase<TColor, TPacked>.MaxHeight
  fullName: ImageSharp.ImageBase<TColor, TPacked>.MaxHeight
  nameWithType.vb: ImageBase(Of TColor, TPacked).MaxHeight
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).MaxHeight
- uid: ImageSharp.ImageBase`2.Pixels
  commentId: P:ImageSharp.ImageBase`2.Pixels
  isExternal: false
  name: Pixels
  nameWithType: ImageBase<TColor, TPacked>.Pixels
  fullName: ImageSharp.ImageBase<TColor, TPacked>.Pixels
  nameWithType.vb: ImageBase(Of TColor, TPacked).Pixels
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).Pixels
- uid: ImageSharp.ImageBase`2.Width
  commentId: P:ImageSharp.ImageBase`2.Width
  isExternal: false
  name: Width
  nameWithType: ImageBase<TColor, TPacked>.Width
  fullName: ImageSharp.ImageBase<TColor, TPacked>.Width
  nameWithType.vb: ImageBase(Of TColor, TPacked).Width
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).Width
- uid: ImageSharp.ImageBase`2.Height
  commentId: P:ImageSharp.ImageBase`2.Height
  isExternal: false
  name: Height
  nameWithType: ImageBase<TColor, TPacked>.Height
  fullName: ImageSharp.ImageBase<TColor, TPacked>.Height
  nameWithType.vb: ImageBase(Of TColor, TPacked).Height
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).Height
- uid: ImageSharp.ImageBase`2.PixelRatio
  commentId: P:ImageSharp.ImageBase`2.PixelRatio
  isExternal: false
  name: PixelRatio
  nameWithType: ImageBase<TColor, TPacked>.PixelRatio
  fullName: ImageSharp.ImageBase<TColor, TPacked>.PixelRatio
  nameWithType.vb: ImageBase(Of TColor, TPacked).PixelRatio
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).PixelRatio
- uid: ImageSharp.ImageBase`2.Bounds
  commentId: P:ImageSharp.ImageBase`2.Bounds
  isExternal: false
  name: Bounds
  nameWithType: ImageBase<TColor, TPacked>.Bounds
  fullName: ImageSharp.ImageBase<TColor, TPacked>.Bounds
  nameWithType.vb: ImageBase(Of TColor, TPacked).Bounds
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).Bounds
- uid: ImageSharp.ImageBase`2.Quality
  commentId: P:ImageSharp.ImageBase`2.Quality
  isExternal: false
  name: Quality
  nameWithType: ImageBase<TColor, TPacked>.Quality
  fullName: ImageSharp.ImageBase<TColor, TPacked>.Quality
  nameWithType.vb: ImageBase(Of TColor, TPacked).Quality
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).Quality
- uid: ImageSharp.ImageBase`2.FrameDelay
  commentId: P:ImageSharp.ImageBase`2.FrameDelay
  isExternal: false
  name: FrameDelay
  nameWithType: ImageBase<TColor, TPacked>.FrameDelay
  fullName: ImageSharp.ImageBase<TColor, TPacked>.FrameDelay
  nameWithType.vb: ImageBase(Of TColor, TPacked).FrameDelay
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).FrameDelay
- uid: ImageSharp.ImageBase`2.InitPixels(System.Int32,System.Int32)
  commentId: M:ImageSharp.ImageBase`2.InitPixels(System.Int32,System.Int32)
  isExternal: true
  name: InitPixels(Int32, Int32)
  nameWithType: ImageBase<TColor, TPacked>.InitPixels(Int32, Int32)
  fullName: ImageSharp.ImageBase<TColor, TPacked>.InitPixels(System.Int32, System.Int32)
  nameWithType.vb: ImageBase(Of TColor, TPacked).InitPixels(Int32, Int32)
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).InitPixels(System.Int32, System.Int32)
  spec.csharp:
  - uid: ImageSharp.ImageBase`2.InitPixels(System.Int32,System.Int32)
    name: InitPixels
    nameWithType: ImageBase<TColor, TPacked>.InitPixels
    fullName: ImageSharp.ImageBase<TColor, TPacked>.InitPixels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.ImageBase`2.InitPixels(System.Int32,System.Int32)
    name: InitPixels
    nameWithType: ImageBase(Of TColor, TPacked).InitPixels
    fullName: ImageSharp.ImageBase(Of TColor, TPacked).InitPixels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.ImageBase`2.SetPixels(System.Int32,System.Int32,`0[])
  commentId: M:ImageSharp.ImageBase`2.SetPixels(System.Int32,System.Int32,`0[])
  isExternal: true
  name: SetPixels(Int32, Int32, TColor[])
  nameWithType: ImageBase<TColor, TPacked>.SetPixels(Int32, Int32, TColor[])
  fullName: ImageSharp.ImageBase<TColor, TPacked>.SetPixels(System.Int32, System.Int32, TColor[])
  nameWithType.vb: ImageBase(Of TColor, TPacked).SetPixels(Int32, Int32, TColor())
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).SetPixels(System.Int32, System.Int32, TColor())
  name.vb: SetPixels(Int32, Int32, TColor())
  spec.csharp:
  - uid: ImageSharp.ImageBase`2.SetPixels(System.Int32,System.Int32,`0[])
    name: SetPixels
    nameWithType: ImageBase<TColor, TPacked>.SetPixels
    fullName: ImageSharp.ImageBase<TColor, TPacked>.SetPixels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.ImageBase`2.SetPixels(System.Int32,System.Int32,`0[])
    name: SetPixels
    nameWithType: ImageBase(Of TColor, TPacked).SetPixels
    fullName: ImageSharp.ImageBase(Of TColor, TPacked).SetPixels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.ImageBase`2.ClonePixels(System.Int32,System.Int32,`0[])
  commentId: M:ImageSharp.ImageBase`2.ClonePixels(System.Int32,System.Int32,`0[])
  isExternal: true
  name: ClonePixels(Int32, Int32, TColor[])
  nameWithType: ImageBase<TColor, TPacked>.ClonePixels(Int32, Int32, TColor[])
  fullName: ImageSharp.ImageBase<TColor, TPacked>.ClonePixels(System.Int32, System.Int32, TColor[])
  nameWithType.vb: ImageBase(Of TColor, TPacked).ClonePixels(Int32, Int32, TColor())
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).ClonePixels(System.Int32, System.Int32, TColor())
  name.vb: ClonePixels(Int32, Int32, TColor())
  spec.csharp:
  - uid: ImageSharp.ImageBase`2.ClonePixels(System.Int32,System.Int32,`0[])
    name: ClonePixels
    nameWithType: ImageBase<TColor, TPacked>.ClonePixels
    fullName: ImageSharp.ImageBase<TColor, TPacked>.ClonePixels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.ImageBase`2.ClonePixels(System.Int32,System.Int32,`0[])
    name: ClonePixels
    nameWithType: ImageBase(Of TColor, TPacked).ClonePixels
    fullName: ImageSharp.ImageBase(Of TColor, TPacked).ClonePixels
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.ImageBase`2.Lock
  commentId: M:ImageSharp.ImageBase`2.Lock
  isExternal: false
  name: Lock()
  nameWithType: ImageBase<TColor, TPacked>.Lock()
  fullName: ImageSharp.ImageBase<TColor, TPacked>.Lock()
  nameWithType.vb: ImageBase(Of TColor, TPacked).Lock()
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).Lock()
  spec.csharp:
  - uid: ImageSharp.ImageBase`2.Lock
    name: Lock
    nameWithType: ImageBase<TColor, TPacked>.Lock
    fullName: ImageSharp.ImageBase<TColor, TPacked>.Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.ImageBase`2.Lock
    name: Lock
    nameWithType: ImageBase(Of TColor, TPacked).Lock
    fullName: ImageSharp.ImageBase(Of TColor, TPacked).Lock
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.ImageBase`2.CopyProperties(ImageSharp.ImageBase{`0,`1})
  commentId: M:ImageSharp.ImageBase`2.CopyProperties(ImageSharp.ImageBase{`0,`1})
  isExternal: false
  name: CopyProperties(ImageBase<TColor, TPacked>)
  nameWithType: ImageBase<TColor, TPacked>.CopyProperties(ImageBase<TColor, TPacked>)
  fullName: ImageSharp.ImageBase<TColor, TPacked>.CopyProperties(ImageSharp.ImageBase<TColor, TPacked>)
  nameWithType.vb: ImageBase(Of TColor, TPacked).CopyProperties(ImageBase(Of TColor, TPacked))
  fullname.vb: ImageSharp.ImageBase(Of TColor, TPacked).CopyProperties(ImageSharp.ImageBase(Of TColor, TPacked))
  name.vb: CopyProperties(ImageBase(Of TColor, TPacked))
  spec.csharp:
  - uid: ImageSharp.ImageBase`2.CopyProperties(ImageSharp.ImageBase{`0,`1})
    name: CopyProperties
    nameWithType: ImageBase<TColor, TPacked>.CopyProperties
    fullName: ImageSharp.ImageBase<TColor, TPacked>.CopyProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: ImageSharp.ImageBase`2
    name: ImageBase
    nameWithType: ImageBase
    fullName: ImageSharp.ImageBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.ImageBase`2.CopyProperties(ImageSharp.ImageBase{`0,`1})
    name: CopyProperties
    nameWithType: ImageBase(Of TColor, TPacked).CopyProperties
    fullName: ImageSharp.ImageBase(Of TColor, TPacked).CopyProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: ImageSharp.ImageBase`2
    name: ImageBase
    nameWithType: ImageBase
    fullName: ImageSharp.ImageBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.Image
  commentId: T:ImageSharp.Image
  parent: ImageSharp
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: ImageSharp.Image
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: ImageSharp.PixelAccessor{ImageSharp.Color,System.UInt32}
  commentId: T:ImageSharp.PixelAccessor{ImageSharp.Color,System.UInt32}
  parent: ImageSharp
  definition: ImageSharp.PixelAccessor`2
  name: PixelAccessor<Color, UInt32>
  nameWithType: PixelAccessor<Color, UInt32>
  fullName: ImageSharp.PixelAccessor<ImageSharp.Color, System.UInt32>
  nameWithType.vb: PixelAccessor(Of Color, UInt32)
  fullname.vb: ImageSharp.PixelAccessor(Of ImageSharp.Color, System.UInt32)
  name.vb: PixelAccessor(Of Color, UInt32)
  spec.csharp:
  - uid: ImageSharp.PixelAccessor`2
    name: PixelAccessor
    nameWithType: PixelAccessor
    fullName: ImageSharp.PixelAccessor
  - name: <
    nameWithType: <
    fullName: <
  - uid: ImageSharp.Color
    name: Color
    nameWithType: Color
    fullName: ImageSharp.Color
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ImageSharp.PixelAccessor`2
    name: PixelAccessor
    nameWithType: PixelAccessor
    fullName: ImageSharp.PixelAccessor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ImageSharp.Color
    name: Color
    nameWithType: Color
    fullName: ImageSharp.Color
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.PixelAccessor`2
  commentId: T:ImageSharp.PixelAccessor`2
  parent: ImageSharp
  isExternal: false
  name: PixelAccessor<TColor, TPacked>
  nameWithType: PixelAccessor<TColor, TPacked>
  fullName: ImageSharp.PixelAccessor<TColor, TPacked>
  nameWithType.vb: PixelAccessor(Of TColor, TPacked)
  fullname.vb: ImageSharp.PixelAccessor(Of TColor, TPacked)
  name.vb: PixelAccessor(Of TColor, TPacked)
  spec.csharp:
  - uid: ImageSharp.PixelAccessor`2
    name: PixelAccessor
    nameWithType: PixelAccessor
    fullName: ImageSharp.PixelAccessor
  - name: <
    nameWithType: <
    fullName: <
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ImageSharp.PixelAccessor`2
    name: PixelAccessor
    nameWithType: PixelAccessor
    fullName: ImageSharp.PixelAccessor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPacked
    nameWithType: TPacked
    fullName: TPacked
  - name: )
    nameWithType: )
    fullName: )
