### YamlMime:ManagedReference
items:
- uid: ImageSharp.Cmyk
  commentId: T:ImageSharp.Cmyk
  id: Cmyk
  parent: ImageSharp
  children:
  - ImageSharp.Cmyk.#ctor(System.Single,System.Single,System.Single,System.Single)
  - ImageSharp.Cmyk.AlmostEquals(ImageSharp.Cmyk,System.Single)
  - ImageSharp.Cmyk.C
  - ImageSharp.Cmyk.Empty
  - ImageSharp.Cmyk.Equals(ImageSharp.Cmyk)
  - ImageSharp.Cmyk.Equals(System.Object)
  - ImageSharp.Cmyk.GetHashCode
  - ImageSharp.Cmyk.IsEmpty
  - ImageSharp.Cmyk.K
  - ImageSharp.Cmyk.M
  - ImageSharp.Cmyk.op_Equality(ImageSharp.Cmyk,ImageSharp.Cmyk)
  - ImageSharp.Cmyk.op_Implicit(ImageSharp.Color)~ImageSharp.Cmyk
  - ImageSharp.Cmyk.op_Inequality(ImageSharp.Cmyk,ImageSharp.Cmyk)
  - ImageSharp.Cmyk.ToString
  - ImageSharp.Cmyk.Y
  langs:
  - csharp
  - vb
  name: Cmyk
  nameWithType: Cmyk
  fullName: ImageSharp.Cmyk
  type: Struct
  source:
    id: Cmyk
    path: ''
    startLine: 2599
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp
  summary: "\nRepresents an CMYK (cyan, magenta, yellow, keyline) color.\n"
  example: []
  syntax:
    content: 'public struct Cmyk : IEquatable<Cmyk>, IAlmostEquatable<Cmyk, float>'
    content.vb: >-
      Public Structure Cmyk
          Implements IEquatable(Of Cmyk), IAlmostEquatable(Of Cmyk, Single)
  implements:
  - System.IEquatable{ImageSharp.Cmyk}
  - ImageSharp.IAlmostEquatable{ImageSharp.Cmyk,System.Single}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: ImageSharp.Cmyk.Empty
  commentId: F:ImageSharp.Cmyk.Empty
  id: Empty
  parent: ImageSharp.Cmyk
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: Cmyk.Empty
  fullName: ImageSharp.Cmyk.Empty
  type: Field
  source:
    id: Empty
    path: ''
    startLine: 2604
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp
  summary: "\nRepresents a <xref href=\"ImageSharp.Cmyk\" data-throw-if-not-resolved=\"false\"></xref> that has C, M, Y, and K values set to zero.\n"
  example: []
  syntax:
    content: public static readonly Cmyk Empty
    content.vb: Public Shared ReadOnly Empty As Cmyk
    return:
      type: ImageSharp.Cmyk
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: ImageSharp.Cmyk.#ctor(System.Single,System.Single,System.Single,System.Single)
  commentId: M:ImageSharp.Cmyk.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: ImageSharp.Cmyk
  langs:
  - csharp
  - vb
  name: Cmyk(Single, Single, Single, Single)
  nameWithType: Cmyk.Cmyk(Single, Single, Single, Single)
  fullName: ImageSharp.Cmyk.Cmyk(System.Single, System.Single, System.Single, System.Single)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 2623
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp
  summary: "\nInitializes a new instance of the <xref href=\"ImageSharp.Cmyk\" data-throw-if-not-resolved=\"false\"></xref> struct.\n"
  example: []
  syntax:
    content: public Cmyk(float c, float m, float y, float k)
    content.vb: Public Sub New(c As Single, m As Single, y As Single, k As Single)
    parameters:
    - id: c
      type: System.Single
      description: The cyan component.
    - id: m
      type: System.Single
      description: The magenta component.
    - id: y
      type: System.Single
      description: The yellow component.
    - id: k
      type: System.Single
      description: The keyline black component.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ImageSharp.Cmyk.C
  commentId: P:ImageSharp.Cmyk.C
  id: C
  parent: ImageSharp.Cmyk
  langs:
  - csharp
  - vb
  name: C
  nameWithType: Cmyk.C
  fullName: ImageSharp.Cmyk.C
  type: Property
  source:
    id: C
    path: ''
    startLine: 2633
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp
  summary: "\nGets the cyan color component.\n<remarks>A value ranging between 0 and 1.</remarks>\n"
  example: []
  syntax:
    content: public float C { get; }
    content.vb: Public ReadOnly Property C As Single
    parameters: []
    return:
      type: System.Single
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: ImageSharp.Cmyk.M
  commentId: P:ImageSharp.Cmyk.M
  id: M
  parent: ImageSharp.Cmyk
  langs:
  - csharp
  - vb
  name: M
  nameWithType: Cmyk.M
  fullName: ImageSharp.Cmyk.M
  type: Property
  source:
    id: M
    path: ''
    startLine: 2639
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp
  summary: "\nGets the magenta color component.\n<remarks>A value ranging between 0 and 1.</remarks>\n"
  example: []
  syntax:
    content: public float M { get; }
    content.vb: Public ReadOnly Property M As Single
    parameters: []
    return:
      type: System.Single
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: ImageSharp.Cmyk.Y
  commentId: P:ImageSharp.Cmyk.Y
  id: Y
  parent: ImageSharp.Cmyk
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Cmyk.Y
  fullName: ImageSharp.Cmyk.Y
  type: Property
  source:
    id: Y
    path: ''
    startLine: 2645
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp
  summary: "\nGets the yellow color component.\n<remarks>A value ranging between 0 and 1.</remarks>\n"
  example: []
  syntax:
    content: public float Y { get; }
    content.vb: Public ReadOnly Property Y As Single
    parameters: []
    return:
      type: System.Single
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: ImageSharp.Cmyk.K
  commentId: P:ImageSharp.Cmyk.K
  id: K
  parent: ImageSharp.Cmyk
  langs:
  - csharp
  - vb
  name: K
  nameWithType: Cmyk.K
  fullName: ImageSharp.Cmyk.K
  type: Property
  source:
    id: K
    path: ''
    startLine: 2651
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp
  summary: "\nGets the keyline black color component.\n<remarks>A value ranging between 0 and 1.</remarks>\n"
  example: []
  syntax:
    content: public float K { get; }
    content.vb: Public ReadOnly Property K As Single
    parameters: []
    return:
      type: System.Single
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: ImageSharp.Cmyk.IsEmpty
  commentId: P:ImageSharp.Cmyk.IsEmpty
  id: IsEmpty
  parent: ImageSharp.Cmyk
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: Cmyk.IsEmpty
  fullName: ImageSharp.Cmyk.IsEmpty
  type: Property
  source:
    id: IsEmpty
    path: ''
    startLine: 2656
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp
  summary: "\nGets a value indicating whether this <xref href=\"ImageSharp.Cmyk\" data-throw-if-not-resolved=\"false\"></xref> is empty.\n"
  example: []
  syntax:
    content: public bool IsEmpty { get; }
    content.vb: Public ReadOnly Property IsEmpty As Boolean
    parameters: []
    return:
      type: System.Boolean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: ImageSharp.Cmyk.op_Implicit(ImageSharp.Color)~ImageSharp.Cmyk
  commentId: M:ImageSharp.Cmyk.op_Implicit(ImageSharp.Color)~ImageSharp.Cmyk
  id: op_Implicit(ImageSharp.Color)~ImageSharp.Cmyk
  parent: ImageSharp.Cmyk
  langs:
  - csharp
  - vb
  name: Implicit(Color to Cmyk)
  nameWithType: Cmyk.Implicit(Color to Cmyk)
  fullName: ImageSharp.Cmyk.Implicit(ImageSharp.Color to ImageSharp.Cmyk)
  type: Operator
  source:
    id: op_Implicit
    path: ''
    startLine: 2669
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp
  summary: "\nAllows the implicit conversion of an instance of <xref href=\"ImageSharp.Color\" data-throw-if-not-resolved=\"false\"></xref> to a\n<xref href=\"ImageSharp.Cmyk\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static implicit operator Cmyk(Color color)
    content.vb: Public Shared Widening Operator CType(color As Color) As Cmyk
    parameters:
    - id: color
      type: ImageSharp.Color
      description: "\nThe instance of <xref href=\"ImageSharp.Bgra32\" data-throw-if-not-resolved=\"false\"></xref> to convert.\n"
    return:
      type: ImageSharp.Cmyk
      description: "\nAn instance of <xref href=\"ImageSharp.Cmyk\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  nameWithType.vb: Cmyk.Widening(Color to Cmyk)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: ImageSharp.Cmyk.Widening(ImageSharp.Color to ImageSharp.Cmyk)
  name.vb: Widening(Color to Cmyk)
- uid: ImageSharp.Cmyk.op_Equality(ImageSharp.Cmyk,ImageSharp.Cmyk)
  commentId: M:ImageSharp.Cmyk.op_Equality(ImageSharp.Cmyk,ImageSharp.Cmyk)
  id: op_Equality(ImageSharp.Cmyk,ImageSharp.Cmyk)
  parent: ImageSharp.Cmyk
  langs:
  - csharp
  - vb
  name: Equality(Cmyk, Cmyk)
  nameWithType: Cmyk.Equality(Cmyk, Cmyk)
  fullName: ImageSharp.Cmyk.Equality(ImageSharp.Cmyk, ImageSharp.Cmyk)
  type: Operator
  source:
    id: op_Equality
    path: ''
    startLine: 2701
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp
  summary: "\nCompares two <xref href=\"ImageSharp.Cmyk\" data-throw-if-not-resolved=\"false\"></xref> objects for equality.\n"
  example: []
  syntax:
    content: public static bool operator ==(Cmyk left, Cmyk right)
    content.vb: Public Shared Operator =(left As Cmyk, right As Cmyk) As Boolean
    parameters:
    - id: left
      type: ImageSharp.Cmyk
      description: "\nThe <xref href=\"ImageSharp.Cmyk\" data-throw-if-not-resolved=\"false\"></xref> on the left side of the operand.\n"
    - id: right
      type: ImageSharp.Cmyk
      description: "\nThe <xref href=\"ImageSharp.Cmyk\" data-throw-if-not-resolved=\"false\"></xref> on the right side of the operand.\n"
    return:
      type: System.Boolean
      description: "\nTrue if the current left is equal to the <em>right</em> parameter; otherwise, false.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: ImageSharp.Cmyk.op_Inequality(ImageSharp.Cmyk,ImageSharp.Cmyk)
  commentId: M:ImageSharp.Cmyk.op_Inequality(ImageSharp.Cmyk,ImageSharp.Cmyk)
  id: op_Inequality(ImageSharp.Cmyk,ImageSharp.Cmyk)
  parent: ImageSharp.Cmyk
  langs:
  - csharp
  - vb
  name: Inequality(Cmyk, Cmyk)
  nameWithType: Cmyk.Inequality(Cmyk, Cmyk)
  fullName: ImageSharp.Cmyk.Inequality(ImageSharp.Cmyk, ImageSharp.Cmyk)
  type: Operator
  source:
    id: op_Inequality
    path: ''
    startLine: 2718
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp
  summary: "\nCompares two <xref href=\"ImageSharp.Cmyk\" data-throw-if-not-resolved=\"false\"></xref> objects for inequality\n"
  example: []
  syntax:
    content: public static bool operator !=(Cmyk left, Cmyk right)
    content.vb: Public Shared Operator <>(left As Cmyk, right As Cmyk) As Boolean
    parameters:
    - id: left
      type: ImageSharp.Cmyk
      description: "\nThe <xref href=\"ImageSharp.Cmyk\" data-throw-if-not-resolved=\"false\"></xref> on the left side of the operand.\n"
    - id: right
      type: ImageSharp.Cmyk
      description: "\nThe <xref href=\"ImageSharp.Cmyk\" data-throw-if-not-resolved=\"false\"></xref> on the right side of the operand.\n"
    return:
      type: System.Boolean
      description: "\nTrue if the current left is unequal to the <em>right</em> parameter; otherwise, false.\n"
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: ImageSharp.Cmyk.GetHashCode
  commentId: M:ImageSharp.Cmyk.GetHashCode
  id: GetHashCode
  parent: ImageSharp.Cmyk
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Cmyk.GetHashCode()
  fullName: ImageSharp.Cmyk.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 2724
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp
  example: []
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: ImageSharp.Cmyk.ToString
  commentId: M:ImageSharp.Cmyk.ToString
  id: ToString
  parent: ImageSharp.Cmyk
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Cmyk.ToString()
  fullName: ImageSharp.Cmyk.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 2730
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.ValueType.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: ImageSharp.Cmyk.Equals(System.Object)
  commentId: M:ImageSharp.Cmyk.Equals(System.Object)
  id: Equals(System.Object)
  parent: ImageSharp.Cmyk
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Cmyk.Equals(Object)
  fullName: ImageSharp.Cmyk.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 2741
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp
  example: []
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.ValueType.Equals(System.Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: ImageSharp.Cmyk.Equals(ImageSharp.Cmyk)
  commentId: M:ImageSharp.Cmyk.Equals(ImageSharp.Cmyk)
  id: Equals(ImageSharp.Cmyk)
  parent: ImageSharp.Cmyk
  langs:
  - csharp
  - vb
  name: Equals(Cmyk)
  nameWithType: Cmyk.Equals(Cmyk)
  fullName: ImageSharp.Cmyk.Equals(ImageSharp.Cmyk)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 2752
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp
  example: []
  syntax:
    content: public bool Equals(Cmyk other)
    content.vb: Public Function Equals(other As Cmyk) As Boolean
    parameters:
    - id: other
      type: ImageSharp.Cmyk
    return:
      type: System.Boolean
  implements:
  - System.IEquatable{ImageSharp.Cmyk}.Equals(ImageSharp.Cmyk)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ImageSharp.Cmyk.AlmostEquals(ImageSharp.Cmyk,System.Single)
  commentId: M:ImageSharp.Cmyk.AlmostEquals(ImageSharp.Cmyk,System.Single)
  id: AlmostEquals(ImageSharp.Cmyk,System.Single)
  parent: ImageSharp.Cmyk
  langs:
  - csharp
  - vb
  name: AlmostEquals(Cmyk, Single)
  nameWithType: Cmyk.AlmostEquals(Cmyk, Single)
  fullName: ImageSharp.Cmyk.AlmostEquals(ImageSharp.Cmyk, System.Single)
  type: Method
  source:
    id: AlmostEquals
    path: ''
    startLine: 2758
  assemblies:
  - cs.temp.dll
  namespace: ImageSharp
  example: []
  syntax:
    content: public bool AlmostEquals(Cmyk other, float precision)
    content.vb: Public Function AlmostEquals(other As Cmyk, precision As Single) As Boolean
    parameters:
    - id: other
      type: ImageSharp.Cmyk
    - id: precision
      type: System.Single
    return:
      type: System.Boolean
  implements:
  - ImageSharp.IAlmostEquatable{ImageSharp.Cmyk,System.Single}.AlmostEquals(ImageSharp.Cmyk,System.Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: ImageSharp
  commentId: N:ImageSharp
  isExternal: false
  name: ImageSharp
  nameWithType: ImageSharp
  fullName: ImageSharp
- uid: System.IEquatable{ImageSharp.Cmyk}
  commentId: T:System.IEquatable{ImageSharp.Cmyk}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Cmyk>
  nameWithType: IEquatable<Cmyk>
  fullName: System.IEquatable<ImageSharp.Cmyk>
  nameWithType.vb: IEquatable(Of Cmyk)
  fullname.vb: System.IEquatable(Of ImageSharp.Cmyk)
  name.vb: IEquatable(Of Cmyk)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ImageSharp.Cmyk
    name: Cmyk
    nameWithType: Cmyk
    fullName: ImageSharp.Cmyk
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ImageSharp.Cmyk
    name: Cmyk
    nameWithType: Cmyk
    fullName: ImageSharp.Cmyk
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.IAlmostEquatable{ImageSharp.Cmyk,System.Single}
  commentId: T:ImageSharp.IAlmostEquatable{ImageSharp.Cmyk,System.Single}
  parent: ImageSharp
  definition: ImageSharp.IAlmostEquatable`2
  name: IAlmostEquatable<Cmyk, Single>
  nameWithType: IAlmostEquatable<Cmyk, Single>
  fullName: ImageSharp.IAlmostEquatable<ImageSharp.Cmyk, System.Single>
  nameWithType.vb: IAlmostEquatable(Of Cmyk, Single)
  fullname.vb: ImageSharp.IAlmostEquatable(Of ImageSharp.Cmyk, System.Single)
  name.vb: IAlmostEquatable(Of Cmyk, Single)
  spec.csharp:
  - uid: ImageSharp.IAlmostEquatable`2
    name: IAlmostEquatable
    nameWithType: IAlmostEquatable
    fullName: ImageSharp.IAlmostEquatable
  - name: <
    nameWithType: <
    fullName: <
  - uid: ImageSharp.Cmyk
    name: Cmyk
    nameWithType: Cmyk
    fullName: ImageSharp.Cmyk
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ImageSharp.IAlmostEquatable`2
    name: IAlmostEquatable
    nameWithType: IAlmostEquatable
    fullName: ImageSharp.IAlmostEquatable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ImageSharp.Cmyk
    name: Cmyk
    nameWithType: Cmyk
    fullName: ImageSharp.Cmyk
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullname.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: ImageSharp.IAlmostEquatable`2
  commentId: T:ImageSharp.IAlmostEquatable`2
  isExternal: false
  name: IAlmostEquatable<TColor, TPrecision>
  nameWithType: IAlmostEquatable<TColor, TPrecision>
  fullName: ImageSharp.IAlmostEquatable<TColor, TPrecision>
  nameWithType.vb: IAlmostEquatable(Of TColor, TPrecision)
  fullname.vb: ImageSharp.IAlmostEquatable(Of TColor, TPrecision)
  name.vb: IAlmostEquatable(Of TColor, TPrecision)
  spec.csharp:
  - uid: ImageSharp.IAlmostEquatable`2
    name: IAlmostEquatable
    nameWithType: IAlmostEquatable
    fullName: ImageSharp.IAlmostEquatable
  - name: <
    nameWithType: <
    fullName: <
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrecision
    nameWithType: TPrecision
    fullName: TPrecision
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ImageSharp.IAlmostEquatable`2
    name: IAlmostEquatable
    nameWithType: IAlmostEquatable
    fullName: ImageSharp.IAlmostEquatable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrecision
    nameWithType: TPrecision
    fullName: TPrecision
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: ImageSharp.Cmyk
  commentId: T:ImageSharp.Cmyk
  parent: ImageSharp
  isExternal: false
  name: Cmyk
  nameWithType: Cmyk
  fullName: ImageSharp.Cmyk
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: ImageSharp.Color
  commentId: T:ImageSharp.Color
  parent: ImageSharp
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: ImageSharp.Color
- uid: ImageSharp.Bgra32
  commentId: T:ImageSharp.Bgra32
  parent: ImageSharp
  isExternal: false
  name: Bgra32
  nameWithType: Bgra32
  fullName: ImageSharp.Bgra32
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{ImageSharp.Cmyk}.Equals(ImageSharp.Cmyk)
  commentId: M:System.IEquatable{ImageSharp.Cmyk}.Equals(ImageSharp.Cmyk)
  parent: System.IEquatable{ImageSharp.Cmyk}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Cmyk)
  nameWithType: IEquatable<Cmyk>.Equals(Cmyk)
  fullName: System.IEquatable<ImageSharp.Cmyk>.Equals(ImageSharp.Cmyk)
  nameWithType.vb: IEquatable(Of Cmyk).Equals(Cmyk)
  fullname.vb: System.IEquatable(Of ImageSharp.Cmyk).Equals(ImageSharp.Cmyk)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Cmyk>.Equals
    fullName: System.IEquatable<ImageSharp.Cmyk>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: ImageSharp.Cmyk
    name: Cmyk
    nameWithType: Cmyk
    fullName: ImageSharp.Cmyk
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Cmyk).Equals
    fullName: System.IEquatable(Of ImageSharp.Cmyk).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: ImageSharp.Cmyk
    name: Cmyk
    nameWithType: Cmyk
    fullName: ImageSharp.Cmyk
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullname.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.IAlmostEquatable{ImageSharp.Cmyk,System.Single}.AlmostEquals(ImageSharp.Cmyk,System.Single)
  commentId: M:ImageSharp.IAlmostEquatable{ImageSharp.Cmyk,System.Single}.AlmostEquals(ImageSharp.Cmyk,System.Single)
  parent: ImageSharp.IAlmostEquatable{ImageSharp.Cmyk,System.Single}
  definition: ImageSharp.IAlmostEquatable`2.AlmostEquals(`0,`1)
  name: AlmostEquals(Cmyk, Single)
  nameWithType: IAlmostEquatable<Cmyk, Single>.AlmostEquals(Cmyk, Single)
  fullName: ImageSharp.IAlmostEquatable<ImageSharp.Cmyk, System.Single>.AlmostEquals(ImageSharp.Cmyk, System.Single)
  nameWithType.vb: IAlmostEquatable(Of Cmyk, Single).AlmostEquals(Cmyk, Single)
  fullname.vb: ImageSharp.IAlmostEquatable(Of ImageSharp.Cmyk, System.Single).AlmostEquals(ImageSharp.Cmyk, System.Single)
  spec.csharp:
  - uid: ImageSharp.IAlmostEquatable`2.AlmostEquals(`0,`1)
    name: AlmostEquals
    nameWithType: IAlmostEquatable<Cmyk, Single>.AlmostEquals
    fullName: ImageSharp.IAlmostEquatable<ImageSharp.Cmyk, System.Single>.AlmostEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: ImageSharp.Cmyk
    name: Cmyk
    nameWithType: Cmyk
    fullName: ImageSharp.Cmyk
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.IAlmostEquatable`2.AlmostEquals(`0,`1)
    name: AlmostEquals
    nameWithType: IAlmostEquatable(Of Cmyk, Single).AlmostEquals
    fullName: ImageSharp.IAlmostEquatable(Of ImageSharp.Cmyk, System.Single).AlmostEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: ImageSharp.Cmyk
    name: Cmyk
    nameWithType: Cmyk
    fullName: ImageSharp.Cmyk
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ImageSharp.IAlmostEquatable`2.AlmostEquals(`0,`1)
  commentId: M:ImageSharp.IAlmostEquatable`2.AlmostEquals(`0,`1)
  isExternal: false
  name: AlmostEquals(TColor, TPrecision)
  nameWithType: IAlmostEquatable<TColor, TPrecision>.AlmostEquals(TColor, TPrecision)
  fullName: ImageSharp.IAlmostEquatable<TColor, TPrecision>.AlmostEquals(TColor, TPrecision)
  nameWithType.vb: IAlmostEquatable(Of TColor, TPrecision).AlmostEquals(TColor, TPrecision)
  fullname.vb: ImageSharp.IAlmostEquatable(Of TColor, TPrecision).AlmostEquals(TColor, TPrecision)
  spec.csharp:
  - uid: ImageSharp.IAlmostEquatable`2.AlmostEquals(`0,`1)
    name: AlmostEquals
    nameWithType: IAlmostEquatable<TColor, TPrecision>.AlmostEquals
    fullName: ImageSharp.IAlmostEquatable<TColor, TPrecision>.AlmostEquals
  - name: (
    nameWithType: (
    fullName: (
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrecision
    nameWithType: TPrecision
    fullName: TPrecision
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ImageSharp.IAlmostEquatable`2.AlmostEquals(`0,`1)
    name: AlmostEquals
    nameWithType: IAlmostEquatable(Of TColor, TPrecision).AlmostEquals
    fullName: ImageSharp.IAlmostEquatable(Of TColor, TPrecision).AlmostEquals
  - name: (
    nameWithType: (
    fullName: (
  - name: TColor
    nameWithType: TColor
    fullName: TColor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrecision
    nameWithType: TPrecision
    fullName: TPrecision
  - name: )
    nameWithType: )
    fullName: )
